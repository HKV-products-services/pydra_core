{
  "hash": "e387bd33c9c85c81f009da8cd55865dd",
  "result": {
    "engine": "jupyter",
    "markdown": "<h1>Hydraulisch Belastingsniveau (HBN)</h1>\n\nAllereerst importeren we de nieuwe Pydra vanuit hkvpy\n\n::: {#50e25d1f .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport pydra_core as pydra\n```\n:::\n\n\n<h3>Opzet profiel en uitvoerpunt</h3>\n\nAls demonstratie worden HBNs voor de Borselle (Westerschelde/Kust) bepaald voor uitvoerpunt 'WS_1_30-4_dk_00002'. Voor het traject geldt een norm van 1/1.000.000 per jaar vanwege de kerncentrale Borselle.\n\nEerst maken we een nieuwe profiel aan. We nemen een 1 op 3 talud met de kruinhoogte op NAP+10,75m en een dijknormaal van 225 graden. Hieronder is de code weergegeven. Voor meer informatie over het schematiseren van profielen zie notebook '02. Profielen.ipynb'.\n\n::: {#2af80f0c .cell execution_count=2}\n``` {.python .cell-code}\n# Maak profiel\nprofile = pydra.Profile(\"Borselle\")\nprofile.set_dike_crest_level(10.75)\nprofile.set_dike_orientation(225)\nprofile.set_dike_geometry([-30, 30], [-10, 10])\n\n# Controle plot\nprofile.draw_profile()\n```\n\n::: {.cell-output .cell-output-display}\n![](03. HBN_files/figure-html/cell-3-output-1.png){width=683 height=449}\n:::\n:::\n\n\nNu we het profiel geschematiseerd hebben, gaan we het uitvoerpunt initialiseren. Hieronder is de code weergegeven met enkele comments. Voor een uitgebreidere beschrijving van het opzetten van een uitvoerpunt zie notebook '01. Overschrijdingsfrequentielijnen.ipynb'.\n\n::: {#90b5e23f .cell execution_count=3}\n``` {.python .cell-code}\n# HRDatabase\nDB_PATH = \"data/WBI2017_Westerschelde_30-4_v03.sqlite\"\nhrdatabase = pydra.HRDatabase(DB_PATH)\n\n# Maak nieuw uitvoerpunt aan met standaard settings\nlocation = hrdatabase.get_location(\"WS_1_30-4_dk_00002\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:210: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:270: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:271: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid2'].replace(rvids, inplace = True)\n```\n:::\n:::\n\n\nHierboven gebruiken we <i>get_location(\"WS_1_30-4_dk_00002\")</i> om een uitvoerpunt aan te maken. Dit wijkt af van wat in notebook 01 is beschreven. In notebook 01 gebruiken we eerst <i>settings = get_settings(\"WS_1_30-4_dk_00002\")</i> om een settings object te definieren en vervolgens <i>location = create_location(settings)</i> om een locatie aan te maken. Door het gebruik van <i>location = get_location(\"WS_1_30-4_dk_00002\")</i> worden beide functies direct uitgevoerd. Dit geeft geen mogelijkheid om vooraf settings aan te passen.\n\nNu voegen we het eerder gedefinieerde profiel 'profile' toe aan 'location' door middel van de functie <i>set_profile(Profile)</i>.\n\n::: {#347a30f7 .cell execution_count=4}\n``` {.python .cell-code}\n# Voeg een profiel toe\nlocation.set_profile(profile)\n\n# Overschrijf profiel\n# location.set_profile(another_profile)\n\n# Verwijder profiel\n# location.remove_profile()\n```\n:::\n\n\nJe kan een profiel overschrijven door de <i>set_profile(Profile)</i> opnieuw te gebruiken. Je kan een profiel verwijderen door <i>remove_profile()</i> aan te roepen.\n\n<h3>HBNs berekenen</h3>\n\nOm HBNs te berekenen gebruiken we het <i>HBN</i> rekenobject. Het HBN rekenobject heeft vier optionele argumenten:\n<lu>\n    <li>q_overtopping (standaard 0.01 m3/m/s): Het kritische overslagdebiet.</li>\n    <li>levels (standaard None): Vooraf opgegeven hoogten. Indien deze None is berekent pydra de HBNs voor een kruinhoogte vanaf de 1% percentiel van de waterstand tot en met de 99% percentiel van de waterstand + 4x de 99% percentiel van de significante golfhoogte.</li>\n    <li>step_size (standaard 0.05): De stapgrootte van de stapjes waar pydra de HBN voor doorrekend.</li>\n    <li>model_uncertainty (standaard True): Wel of niet toepassen van modelonzekerheid.</li>\n</lu>\n\n::: {#7d17e062 .cell execution_count=5}\n``` {.python .cell-code}\n# Initieer het HBN rekenobject\nhbn = pydra.HBN(0.01)\nhbn.set_levels(np.arange(0.0, 15.0, 0.05))\n```\n:::\n\n\nVervolgens kunnen we met het rekenobject <i>hbn</i> een overschrijdingsfrequentielijn bepalen voor HR uitvoerpunt 'WS_1_30-4_dk_00002' door de <i>calculate()</i> functie aan te roepen van het rekenobject en het <i>location</i> object als argument mee te geven.\n\n::: {#5622f190 .cell execution_count=6}\n``` {.python .cell-code}\nhbn_borselle = hbn.calculate(location)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[15:05:38]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[15:05:38]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[15:05:38]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[15:05:38]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[15:05:38]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[15:05:38]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[15:05:38]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[15:05:38]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[15:05:38]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[15:05:38]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[15:05:38]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[15:05:38]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[15:05:38]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[15:05:38]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[15:05:38]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[15:05:38]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[15:05:38]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[15:05:38]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[15:05:38]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[15:05:38]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[15:05:38]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[15:05:38]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[15:05:38]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[15:05:38]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[15:05:38]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n```\n:::\n:::\n\n\nDit geeft een overschrijdingsfrequentielijn <i>hbn_borselle</i>. Het is een object waarin de berekende gegevens (HBN en overschrijdingsfrequenties) worden opgeslagen. Als je het object print, zie je wat er allemaal in zit.\n\n::: {#ce4bd197 .cell execution_count=7}\n``` {.python .cell-code}\nprint(hbn_borselle)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999445e+02, 3.59999445e+02, 3.59999445e+02,\n       3.59999445e+02, 3.59999444e+02, 3.59999442e+02, 3.59999434e+02,\n       3.59752392e+02, 3.51664164e+02, 3.46088127e+02, 3.34377915e+02,\n       3.19950688e+02, 3.06504136e+02, 2.90526104e+02, 2.74871377e+02,\n       2.55523487e+02, 2.33817153e+02, 2.07473407e+02, 1.77847932e+02,\n       1.48968663e+02, 1.21200913e+02, 9.68802440e+01, 7.77659364e+01,\n       6.09690500e+01, 4.79358971e+01, 3.78243750e+01, 3.01168057e+01,\n       2.40684509e+01, 1.96659031e+01, 1.60772887e+01, 1.33871474e+01,\n       1.12609828e+01, 9.59250946e+00, 8.23765354e+00, 7.17852624e+00,\n       6.24987347e+00, 5.46221572e+00, 4.82237487e+00, 4.26520775e+00,\n       3.79985128e+00, 3.37369188e+00, 3.01697554e+00, 2.69934508e+00,\n       2.40843555e+00, 2.14896609e+00, 1.93576881e+00, 1.72988256e+00,\n       1.55506283e+00, 1.41207366e+00, 1.26202303e+00, 1.13965858e+00,\n       1.03642071e+00, 9.29447749e-01, 8.41604501e-01, 7.55442032e-01,\n       6.96951663e-01, 6.25620832e-01, 5.63252805e-01, 5.13961514e-01,\n       4.62540931e-01, 4.23396067e-01, 3.80801166e-01, 3.44978934e-01,\n       3.16376235e-01, 2.85296093e-01, 2.58003629e-01, 2.36446595e-01,\n       2.15151240e-01, 1.93985960e-01, 1.75752495e-01, 1.61721991e-01,\n       1.47618118e-01, 1.34166534e-01, 1.21274921e-01, 1.11630418e-01,\n       1.01363789e-01, 9.19646238e-02, 8.46892383e-02, 7.67003235e-02,\n       7.06566762e-02, 6.41126200e-02, 5.86009511e-02, 5.36632039e-02,\n       4.87492485e-02, 4.47273980e-02, 4.10530828e-02, 3.72843302e-02,\n       3.42020523e-02, 3.13192243e-02, 2.86945008e-02, 2.61124634e-02,\n       2.39962147e-02, 2.19981140e-02, 2.02015013e-02, 1.85248259e-02,\n       1.69293054e-02, 1.54972152e-02, 1.42772520e-02, 1.30455211e-02,\n       1.19598580e-02, 1.09522896e-02, 1.01399668e-02, 9.27876156e-03,\n       8.48523261e-03, 7.82164785e-03, 7.21890465e-03, 6.62196138e-03,\n       6.06388845e-03, 5.56399466e-03, 5.13433423e-03, 4.71336894e-03,\n       4.35795821e-03, 4.00440362e-03, 3.65821222e-03, 3.39895903e-03,\n       3.13357456e-03, 2.87780039e-03, 2.60359054e-03, 2.43042645e-03,\n       2.24421707e-03, 2.07408271e-03, 1.89432428e-03, 1.74481427e-03,\n       1.59585158e-03, 1.47244083e-03, 1.37056018e-03, 1.24798520e-03,\n       1.15769251e-03, 1.06131602e-03, 9.73843972e-04, 9.10250020e-04,\n       8.33073778e-04, 7.64273481e-04, 7.02907920e-04, 6.49054945e-04,\n       6.04398335e-04, 5.54984458e-04, 5.08439541e-04, 4.68405829e-04,\n       4.34290482e-04, 3.93459680e-04, 3.67099122e-04, 3.39408744e-04,\n       3.14349732e-04, 2.87712664e-04, 2.67106444e-04, 2.43799914e-04,\n       2.26441393e-04, 2.09465452e-04, 1.93414408e-04, 1.77952818e-04,\n       1.63915686e-04, 1.51772664e-04, 1.39316847e-04, 1.28790922e-04,\n       1.20114032e-04, 1.10633410e-04, 1.02584839e-04, 9.38261935e-05,\n       8.69173084e-05, 8.03378983e-05, 7.46163439e-05, 6.89339002e-05,\n       6.39985717e-05, 5.89537555e-05, 5.45883194e-05, 5.06359694e-05,\n       4.67372294e-05, 4.33065575e-05, 4.01997958e-05, 3.73716699e-05,\n       3.46944231e-05, 3.18318222e-05, 2.97578621e-05, 2.73790305e-05,\n       2.57014028e-05, 2.36891818e-05, 2.19239675e-05, 2.03479883e-05,\n       1.89814593e-05, 1.75141690e-05, 1.63434767e-05, 1.50289812e-05,\n       1.42320296e-05, 1.30847411e-05, 1.21300314e-05, 1.12416826e-05,\n       1.05156127e-05, 9.74657297e-06, 9.10559307e-06, 8.40362731e-06,\n       7.86271027e-06, 7.26635043e-06, 6.78332274e-06, 6.34223353e-06,\n       5.87820504e-06, 5.40485726e-06, 5.06020846e-06, 4.74905333e-06,\n       4.40867888e-06, 4.08642798e-06, 3.81328201e-06, 3.56455823e-06,\n       3.32879411e-06, 3.06705333e-06, 2.86815161e-06, 2.68198754e-06,\n       2.50179035e-06, 2.33293660e-06, 2.15963044e-06, 2.03528859e-06,\n       1.90195602e-06, 1.76068425e-06, 1.65067813e-06, 1.54858936e-06,\n       1.43963014e-06, 1.33975974e-06, 1.24958304e-06, 1.17600286e-06,\n       1.08930425e-06, 1.01703011e-06, 9.50763992e-07, 8.93940188e-07,\n       8.32335436e-07, 7.81958783e-07, 7.20491884e-07, 6.83962165e-07,\n       6.36508700e-07, 5.95511809e-07, 5.51186970e-07, 5.23623892e-07,\n       4.90354159e-07, 4.56476913e-07, 4.25606148e-07, 4.03792460e-07,\n       3.77186633e-07, 3.53530980e-07, 3.28959770e-07, 3.10441531e-07,\n       2.89826431e-07, 2.71062944e-07, 2.53543458e-07, 2.39814207e-07,\n       2.23027515e-07, 2.09494455e-07, 1.97784826e-07, 1.84825962e-07,\n       1.73329349e-07, 1.63409397e-07, 1.53079546e-07, 1.43248318e-07,\n       1.35471059e-07, 1.25715590e-07, 1.18268245e-07, 1.11639262e-07,\n       1.05034918e-07, 9.73472806e-08, 9.26671495e-08, 8.62810081e-08,\n       8.16858498e-08, 7.69365608e-08, 7.14464677e-08, 6.73441949e-08]))\n```\n:::\n:::\n\n\nHieronder is een plot van de berekende overschrijdingsfrequentielijn gegeven.\n\n::: {#eb55b994 .cell execution_count=8}\n``` {.python .cell-code}\nplt.figure(figsize = [8, 5])\nplt.grid()\nplt.plot(1 / np.array(hbn_borselle.exceedance_frequency), hbn_borselle.level, label = \"Pydra\")\nplt.legend(loc = \"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn HBN met q = 10 l/m/s (WS_1_30-4_dk_00002)\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 100_000)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(4, 12)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](03. HBN_files/figure-html/cell-9-output-1.png){width=671 height=451}\n:::\n:::\n\n\nEn een vergelijking met Hydra-NL.\n\n::: {#a64d55e6 .cell execution_count=9}\n``` {.python .cell-code}\nhydranl_tt = np.array([10, 30, 100, 300, 1_000, 3_000, 10_000, 30_000, 100_000, 300_000, 1_000_000])\nhydranl_hbn = np.array([5.582, 6.206, 6.904, 7.558, 8.282, 8.955, 9.71, 10.412, 11.207, 11.969, 12.831])\n\nplt.figure(figsize = [8, 5])\nplt.grid()\nplt.plot(1 / np.array(hbn_borselle.exceedance_frequency), hbn_borselle.level, label = \"Pydra\")\nplt.plot(hydranl_tt, hydranl_hbn, \":\", label = \"Hydra-NL\")\nplt.legend(loc = \"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn HBN met q = 10 l/m/s (WS_1_30-4_dk_00002)\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 10_00_000)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(4, 13)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](03. HBN_files/figure-html/cell-10-output-1.png){width=663 height=451}\n:::\n:::\n\n\n<h3>HBNs voor een heel traject</h3>\n\nZoals in notebook '01. Overschrijdingsfrequentielijnen' uitgelegd, is het mogelijk om voor alle uitvoerpunten in een database een batch berekening uit te voeren. Voor het bepalen van HBN's kan dit ook, in dit geval worden dan alle locaties waar nog geen profiel aan verbonden is overgeslagen. Voor meer informatie over batch berekeningen zie notebook '01. Overschrijdingsfrequentielijnen'.\n\n::: {#73351b1b .cell execution_count=10}\n``` {.python .cell-code}\n# Voor de vorm voegen we ons eerder gedefinieerde profiel ook toe aan WS_1_30-4_dk_00001 en WS_1_30-4_dk_00003\ntmp_location = hrdatabase.get_location(\"WS_1_30-4_dk_00001\")\ntmp_location.set_profile(profile)\ntmp_location = hrdatabase.get_location(\"WS_1_30-4_dk_00003\")\ntmp_location.set_profile(profile)\n\n# Bereken de HBNs voor uitvoerpunten die een profiel hebben\nalle_hbns = hbn.calculate(hrdatabase)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:210: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:270: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:271: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid2'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:210: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:270: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:271: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid2'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:210: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:270: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:271: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid2'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:210: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:270: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:271: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid2'].replace(rvids, inplace = True)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[WARNING] Profile is not assiged to location 'WS_1_30-4_dk_00006'. Skipping this calculation.\n[WARNING] Profile is not assiged to location 'WS_2_30-4_dk_00005'. Skipping this calculation.\n[WARNING] Profile is not assiged to location 'WS_1_30-4_dk_00004'. Skipping this calculation.\n[15:05:39]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[15:05:39]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[15:05:39]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[15:05:39]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[15:05:39]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[15:05:39]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:210: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:270: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid'].replace(rvids, inplace = True)\nC:\\Data\\Python\\TBCI\\pydra_core\\src\\pydra_core\\io\\database_hr.py:271: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  data['rvid2'].replace(rvids, inplace = True)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[15:05:39]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[15:05:39]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[15:05:39]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[15:05:39]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[15:05:39]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[15:05:39]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[15:05:39]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[15:05:39]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[15:05:39]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[15:05:39]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[15:05:39]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[15:05:39]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[15:05:39]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[15:05:39]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[15:05:39]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[15:05:39]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[15:05:39]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[15:05:39]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[15:05:39]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n[15:05:39]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[15:05:39]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[15:05:39]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[15:05:39]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[15:05:39]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[15:05:39]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[15:05:40]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[15:05:40]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[15:05:40]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[15:05:40]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[15:05:40]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[15:05:40]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[15:05:40]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[15:05:40]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[15:05:40]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[15:05:40]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[15:05:40]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[15:05:40]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[15:05:40]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[15:05:40]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[15:05:40]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[15:05:40]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[15:05:40]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[15:05:40]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[15:05:40]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n[15:05:40]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[15:05:40]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[15:05:40]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[15:05:40]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[15:05:40]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[15:05:40]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[15:05:40]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[15:05:40]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[15:05:40]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[15:05:40]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[15:05:40]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[15:05:40]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[15:05:40]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[15:05:40]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[15:05:40]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[15:05:40]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[15:05:40]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[15:05:40]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[15:05:40]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[15:05:40]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[15:05:40]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[15:05:40]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[15:05:40]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[15:05:40]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[15:05:40]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n```\n:::\n:::\n\n\nOmdat we nu een heel traject doorrekenen, zal <i>calculate()</i> niet één frequentielijn returnen. In plaats daarvan wordt een dictionary gereturnd met als key de naam van het uitvoerpunt en als value het <i>FrequencyLine</i> resultaat object. Als er geen HBN berekent is, is de waarde in de dictionary <i>None</i>.\n\n::: {#2aad8be0 .cell execution_count=11}\n``` {.python .cell-code}\nprint(alle_hbns)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{'WS_1_30-4_dk_00006': None, 'WS_2_30-4_dk_00005': None, 'WS_1_30-4_dk_00004': None, 'WS_1_30-4_dk_00003': FrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59888262e+02, 3.59581821e+02, 3.58125595e+02,\n       3.55823495e+02, 3.51968493e+02, 3.46141330e+02, 3.39014707e+02,\n       3.29249665e+02, 3.15577045e+02, 2.97888582e+02, 2.75848553e+02,\n       2.48742992e+02, 2.21800917e+02, 1.93716833e+02, 1.68823165e+02,\n       1.45236212e+02, 1.24006795e+02, 1.08118813e+02, 9.19802163e+01,\n       7.88305723e+01, 6.83340864e+01, 5.83558842e+01, 5.09995222e+01,\n       4.41748589e+01, 3.84810041e+01, 3.38125925e+01, 2.96248727e+01,\n       2.59415332e+01, 2.29860263e+01, 2.04154716e+01, 1.81967787e+01,\n       1.61943525e+01, 1.44917626e+01, 1.30607879e+01, 1.16817280e+01,\n       1.04941472e+01, 9.52359719e+00, 8.50666998e+00, 7.70741397e+00,\n       6.92102151e+00, 6.32746304e+00, 5.72285934e+00, 5.19451297e+00,\n       4.73010562e+00, 4.28586524e+00, 3.92149818e+00, 3.54882181e+00,\n       3.24097898e+00, 2.96053375e+00, 2.69089701e+00, 2.45124396e+00,\n       2.23913532e+00, 2.05085095e+00, 1.86619083e+00, 1.71260002e+00,\n       1.55822040e+00, 1.42222386e+00, 1.29866501e+00, 1.18222379e+00,\n       1.08440835e+00, 1.00044729e+00, 9.18848610e-01, 8.30111381e-01,\n       7.61168089e-01, 7.02801172e-01, 6.39336942e-01, 5.86057878e-01,\n       5.41697360e-01, 4.92439485e-01, 4.47299504e-01, 4.14400255e-01,\n       3.78021147e-01, 3.43787043e-01, 3.19556766e-01, 2.91046871e-01,\n       2.63994344e-01, 2.46284567e-01, 2.24808750e-01, 2.02963743e-01,\n       1.87681530e-01, 1.73243528e-01, 1.57337244e-01, 1.44324869e-01,\n       1.33001747e-01, 1.20658532e-01, 1.11245643e-01, 1.01916745e-01,\n       9.39556767e-02, 8.58494472e-02, 7.83008331e-02, 7.25940588e-02,\n       6.58035169e-02, 6.04469634e-02, 5.58532479e-02, 5.10788079e-02,\n       4.68247028e-02, 4.31880120e-02, 3.90349425e-02, 3.58256877e-02,\n       3.29844272e-02, 3.02317561e-02, 2.74523676e-02, 2.53900099e-02,\n       2.31795395e-02, 2.14022859e-02, 1.93830615e-02, 1.78058329e-02,\n       1.64163999e-02, 1.50913815e-02, 1.37818087e-02, 1.24921549e-02,\n       1.15596027e-02, 1.05488557e-02, 9.63834084e-03, 8.83564961e-03,\n       8.13732438e-03, 7.46451152e-03, 6.84355827e-03, 6.24305820e-03,\n       5.76324830e-03, 5.28877277e-03, 4.83787705e-03, 4.44068259e-03,\n       4.05080151e-03, 3.74282578e-03, 3.43843562e-03, 3.13707643e-03,\n       2.87408604e-03, 2.63810974e-03, 2.42818895e-03, 2.24163058e-03,\n       2.05397248e-03, 1.87519439e-03, 1.73160722e-03, 1.59260428e-03,\n       1.45028014e-03, 1.35329780e-03, 1.22828949e-03, 1.12896129e-03,\n       1.04117683e-03, 9.57647940e-04, 8.78737873e-04, 8.08224336e-04,\n       7.38098799e-04, 6.80490629e-04, 6.31642465e-04, 5.69866104e-04,\n       5.24660584e-04, 4.86061263e-04, 4.46940590e-04, 4.10835346e-04,\n       3.76276645e-04, 3.47156785e-04, 3.20619169e-04, 2.94105069e-04,\n       2.70627491e-04, 2.49380238e-04, 2.29980892e-04, 2.12028363e-04,\n       1.95927282e-04, 1.80677802e-04, 1.66840038e-04, 1.53542887e-04,\n       1.41027517e-04, 1.29425843e-04, 1.19556009e-04, 1.09662312e-04,\n       1.00574340e-04, 9.35864311e-05, 8.60762754e-05, 8.00541394e-05,\n       7.29894849e-05, 6.86288399e-05, 6.24957409e-05, 5.74161037e-05,\n       5.35610103e-05, 4.90449961e-05, 4.53016531e-05, 4.19049707e-05,\n       3.85133279e-05, 3.60511982e-05, 3.29633545e-05, 3.03656567e-05,\n       2.80867265e-05, 2.61052726e-05, 2.40987087e-05, 2.23571490e-05,\n       2.05368473e-05, 1.90569490e-05, 1.75849074e-05, 1.62593262e-05,\n       1.50872932e-05, 1.39501504e-05, 1.30396318e-05, 1.18889054e-05,\n       1.10939604e-05, 1.02334791e-05, 9.52663503e-06, 8.77951730e-06,\n       8.13579920e-06, 7.51019491e-06, 6.97181040e-06, 6.45397763e-06,\n       6.03120607e-06, 5.52217174e-06, 5.23550935e-06, 4.81341738e-06,\n       4.52588996e-06, 4.13427328e-06, 3.89317054e-06, 3.55668906e-06,\n       3.31281693e-06, 3.07725865e-06, 2.87880626e-06, 2.63841215e-06,\n       2.46063024e-06, 2.28426107e-06, 2.14580407e-06, 1.99447036e-06,\n       1.84610181e-06, 1.72488555e-06, 1.60209549e-06, 1.47445593e-06,\n       1.39090904e-06, 1.29340203e-06, 1.20477102e-06, 1.12574363e-06,\n       1.04567522e-06, 9.72732164e-07, 9.10672415e-07, 8.46692713e-07,\n       7.94326022e-07, 7.43544372e-07, 6.83791390e-07, 6.41407776e-07,\n       5.95347140e-07, 5.64045794e-07, 5.19610077e-07, 4.92268992e-07,\n       4.56474094e-07, 4.24050422e-07, 3.96656753e-07, 3.68002710e-07,\n       3.49102591e-07, 3.23991034e-07, 3.04003139e-07, 2.82267115e-07,\n       2.67849248e-07, 2.47139844e-07, 2.34212677e-07, 2.16621549e-07,\n       2.04826730e-07, 1.90240456e-07, 1.80632154e-07, 1.67513461e-07])), 'WS_1_30-4_dk_00002': FrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999445e+02, 3.59999445e+02, 3.59999445e+02,\n       3.59999445e+02, 3.59999444e+02, 3.59999442e+02, 3.59999434e+02,\n       3.59752392e+02, 3.51664164e+02, 3.46088127e+02, 3.34377915e+02,\n       3.19950688e+02, 3.06504136e+02, 2.90526104e+02, 2.74871377e+02,\n       2.55523487e+02, 2.33817153e+02, 2.07473407e+02, 1.77847932e+02,\n       1.48968663e+02, 1.21200913e+02, 9.68802440e+01, 7.77659364e+01,\n       6.09690500e+01, 4.79358971e+01, 3.78243750e+01, 3.01168057e+01,\n       2.40684509e+01, 1.96659031e+01, 1.60772887e+01, 1.33871474e+01,\n       1.12609828e+01, 9.59250946e+00, 8.23765354e+00, 7.17852624e+00,\n       6.24987347e+00, 5.46221572e+00, 4.82237487e+00, 4.26520775e+00,\n       3.79985128e+00, 3.37369188e+00, 3.01697554e+00, 2.69934508e+00,\n       2.40843555e+00, 2.14896609e+00, 1.93576881e+00, 1.72988256e+00,\n       1.55506283e+00, 1.41207366e+00, 1.26202303e+00, 1.13965858e+00,\n       1.03642071e+00, 9.29447749e-01, 8.41604501e-01, 7.55442032e-01,\n       6.96951663e-01, 6.25620832e-01, 5.63252805e-01, 5.13961514e-01,\n       4.62540931e-01, 4.23396067e-01, 3.80801166e-01, 3.44978934e-01,\n       3.16376235e-01, 2.85296093e-01, 2.58003629e-01, 2.36446595e-01,\n       2.15151240e-01, 1.93985960e-01, 1.75752495e-01, 1.61721991e-01,\n       1.47618118e-01, 1.34166534e-01, 1.21274921e-01, 1.11630418e-01,\n       1.01363789e-01, 9.19646238e-02, 8.46892383e-02, 7.67003235e-02,\n       7.06566762e-02, 6.41126200e-02, 5.86009511e-02, 5.36632039e-02,\n       4.87492485e-02, 4.47273980e-02, 4.10530828e-02, 3.72843302e-02,\n       3.42020523e-02, 3.13192243e-02, 2.86945008e-02, 2.61124634e-02,\n       2.39962147e-02, 2.19981140e-02, 2.02015013e-02, 1.85248259e-02,\n       1.69293054e-02, 1.54972152e-02, 1.42772520e-02, 1.30455211e-02,\n       1.19598580e-02, 1.09522896e-02, 1.01399668e-02, 9.27876156e-03,\n       8.48523261e-03, 7.82164785e-03, 7.21890465e-03, 6.62196138e-03,\n       6.06388845e-03, 5.56399466e-03, 5.13433423e-03, 4.71336894e-03,\n       4.35795821e-03, 4.00440362e-03, 3.65821222e-03, 3.39895903e-03,\n       3.13357456e-03, 2.87780039e-03, 2.60359054e-03, 2.43042645e-03,\n       2.24421707e-03, 2.07408271e-03, 1.89432428e-03, 1.74481427e-03,\n       1.59585158e-03, 1.47244083e-03, 1.37056018e-03, 1.24798520e-03,\n       1.15769251e-03, 1.06131602e-03, 9.73843972e-04, 9.10250020e-04,\n       8.33073778e-04, 7.64273481e-04, 7.02907920e-04, 6.49054945e-04,\n       6.04398335e-04, 5.54984458e-04, 5.08439541e-04, 4.68405829e-04,\n       4.34290482e-04, 3.93459680e-04, 3.67099122e-04, 3.39408744e-04,\n       3.14349732e-04, 2.87712664e-04, 2.67106444e-04, 2.43799914e-04,\n       2.26441393e-04, 2.09465452e-04, 1.93414408e-04, 1.77952818e-04,\n       1.63915686e-04, 1.51772664e-04, 1.39316847e-04, 1.28790922e-04,\n       1.20114032e-04, 1.10633410e-04, 1.02584839e-04, 9.38261935e-05,\n       8.69173084e-05, 8.03378983e-05, 7.46163439e-05, 6.89339002e-05,\n       6.39985717e-05, 5.89537555e-05, 5.45883194e-05, 5.06359694e-05,\n       4.67372294e-05, 4.33065575e-05, 4.01997958e-05, 3.73716699e-05,\n       3.46944231e-05, 3.18318222e-05, 2.97578621e-05, 2.73790305e-05,\n       2.57014028e-05, 2.36891818e-05, 2.19239675e-05, 2.03479883e-05,\n       1.89814593e-05, 1.75141690e-05, 1.63434767e-05, 1.50289812e-05,\n       1.42320296e-05, 1.30847411e-05, 1.21300314e-05, 1.12416826e-05,\n       1.05156127e-05, 9.74657297e-06, 9.10559307e-06, 8.40362731e-06,\n       7.86271027e-06, 7.26635043e-06, 6.78332274e-06, 6.34223353e-06,\n       5.87820504e-06, 5.40485726e-06, 5.06020846e-06, 4.74905333e-06,\n       4.40867888e-06, 4.08642798e-06, 3.81328201e-06, 3.56455823e-06,\n       3.32879411e-06, 3.06705333e-06, 2.86815161e-06, 2.68198754e-06,\n       2.50179035e-06, 2.33293660e-06, 2.15963044e-06, 2.03528859e-06,\n       1.90195602e-06, 1.76068425e-06, 1.65067813e-06, 1.54858936e-06,\n       1.43963014e-06, 1.33975974e-06, 1.24958304e-06, 1.17600286e-06,\n       1.08930425e-06, 1.01703011e-06, 9.50763992e-07, 8.93940188e-07,\n       8.32335436e-07, 7.81958783e-07, 7.20491884e-07, 6.83962165e-07,\n       6.36508700e-07, 5.95511809e-07, 5.51186970e-07, 5.23623892e-07,\n       4.90354159e-07, 4.56476913e-07, 4.25606148e-07, 4.03792460e-07,\n       3.77186633e-07, 3.53530980e-07, 3.28959770e-07, 3.10441531e-07,\n       2.89826431e-07, 2.71062944e-07, 2.53543458e-07, 2.39814207e-07,\n       2.23027515e-07, 2.09494455e-07, 1.97784826e-07, 1.84825962e-07,\n       1.73329349e-07, 1.63409397e-07, 1.53079546e-07, 1.43248318e-07,\n       1.35471059e-07, 1.25715590e-07, 1.18268245e-07, 1.11639262e-07,\n       1.05034918e-07, 9.73472806e-08, 9.26671495e-08, 8.62810081e-08,\n       8.16858498e-08, 7.69365608e-08, 7.14464677e-08, 6.73441949e-08])), 'WS_1_30-4_dk_00001': FrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999444e+02, 3.59999443e+02,\n       3.59999435e+02, 3.59999247e+02, 3.59998647e+02, 3.59997633e+02,\n       3.59995367e+02, 3.59989875e+02, 3.59982506e+02, 3.59965592e+02,\n       3.59948840e+02, 3.59905881e+02, 3.59829836e+02, 3.59696101e+02,\n       3.59470291e+02, 3.59030516e+02, 3.58336536e+02, 3.57301556e+02,\n       3.55593997e+02, 3.52684298e+02, 3.48750972e+02, 3.42638936e+02,\n       3.33739324e+02, 3.22236205e+02, 3.09266669e+02, 2.89007897e+02,\n       2.70568371e+02, 2.54514433e+02, 2.29806701e+02, 2.19396569e+02,\n       2.02092233e+02, 1.88364404e+02, 1.79281631e+02, 1.46817022e+02,\n       1.30635378e+02, 9.36159705e+01, 6.98882292e+01, 5.02910908e+01,\n       3.14970094e+01, 2.25089185e+01, 1.46597182e+01, 1.07062588e+01,\n       7.85675915e+00, 6.03615099e+00, 4.97323467e+00, 4.21737586e+00,\n       3.39114994e+00, 3.00426373e+00, 2.62884689e+00, 2.20726636e+00,\n       1.95738676e+00, 1.72606172e+00, 1.49588384e+00, 1.31573068e+00,\n       1.15647728e+00, 1.02338887e+00, 8.97699516e-01, 7.96408626e-01,\n       7.05727095e-01, 6.24796499e-01, 5.51639712e-01, 4.91324130e-01,\n       4.35421985e-01, 3.87282904e-01, 3.45406238e-01, 3.08831019e-01,\n       2.71406907e-01, 2.44853300e-01, 2.18834279e-01, 1.94725407e-01,\n       1.75124345e-01, 1.56994859e-01, 1.39971539e-01, 1.26598153e-01,\n       1.13061362e-01, 1.00313013e-01, 9.09179023e-02, 8.19765234e-02,\n       7.28201107e-02, 6.55515232e-02, 5.98566067e-02, 5.38974363e-02,\n       4.74401382e-02, 4.30087923e-02, 3.93682363e-02, 3.54648478e-02,\n       3.18272935e-02, 2.87035263e-02, 2.62275829e-02, 2.36095400e-02,\n       2.11504604e-02, 1.92970607e-02, 1.74444903e-02, 1.57997035e-02,\n       1.42132718e-02, 1.29397444e-02, 1.17594697e-02, 1.07028050e-02,\n       9.63626463e-03, 8.73478510e-03, 7.93486088e-03, 7.22907754e-03,\n       6.53909543e-03, 5.86289806e-03, 5.35331366e-03, 4.90482085e-03,\n       4.41414035e-03, 4.00569963e-03, 3.66685835e-03, 3.34173407e-03,\n       3.02157706e-03, 2.77139690e-03, 2.49527298e-03, 2.27253671e-03,\n       2.07405773e-03, 1.89975078e-03, 1.70319252e-03, 1.57094844e-03,\n       1.43309725e-03, 1.29471922e-03, 1.17547194e-03, 1.07855471e-03,\n       9.84648764e-04, 8.98762633e-04, 8.14435123e-04, 7.55516185e-04,\n       6.84825252e-04, 6.16407888e-04, 5.69564665e-04, 5.20698829e-04,\n       4.73880959e-04, 4.32398217e-04, 3.96274567e-04, 3.63722266e-04,\n       3.32435436e-04, 3.03955739e-04, 2.77749926e-04, 2.53726524e-04,\n       2.32059729e-04, 2.13463448e-04, 1.94304244e-04, 1.77888411e-04,\n       1.64230374e-04, 1.51247883e-04, 1.37739061e-04, 1.25476823e-04,\n       1.16304531e-04, 1.05840090e-04, 9.73944204e-05, 8.88792672e-05,\n       8.24567995e-05, 7.61397492e-05, 6.96219232e-05, 6.35037942e-05,\n       5.87379079e-05, 5.43335679e-05, 5.02194256e-05, 4.56849844e-05,\n       4.22363329e-05, 3.88186176e-05, 3.59369423e-05, 3.31027721e-05,\n       3.04341271e-05, 2.80443161e-05, 2.58757780e-05, 2.42462580e-05,\n       2.19501340e-05, 2.02576948e-05, 1.86796780e-05, 1.76377208e-05,\n       1.59584801e-05, 1.45322338e-05, 1.35821649e-05, 1.26501290e-05,\n       1.15705791e-05, 1.05964311e-05, 1.00104998e-05, 9.19498335e-06,\n       8.42604706e-06, 7.74502872e-06, 7.29670628e-06, 6.68285608e-06,\n       6.06631153e-06, 5.68471202e-06, 5.38174629e-06, 4.96150006e-06,\n       4.40786796e-06, 4.13942827e-06, 3.94273146e-06, 3.69097143e-06,\n       3.28380405e-06, 3.00157839e-06, 2.86450332e-06, 2.71894714e-06,\n       2.43522028e-06, 2.23348237e-06, 2.10079015e-06, 1.98689890e-06,\n       1.81066781e-06, 1.65887294e-06, 1.55437409e-06, 1.44693327e-06,\n       1.33853837e-06, 1.22498230e-06, 1.15503968e-06, 1.06769218e-06,\n       9.82226212e-07, 9.02324341e-07, 8.61034911e-07, 8.00232901e-07,\n       7.34807346e-07, 6.64731185e-07, 6.30015957e-07, 5.88262237e-07,\n       5.53165324e-07, 4.95380516e-07, 4.66174673e-07, 4.33354237e-07,\n       4.07135955e-07, 3.73818661e-07, 3.43093206e-07, 3.21164052e-07,\n       3.01154934e-07, 2.79607737e-07, 2.58785457e-07, 2.37746512e-07,\n       2.24074286e-07, 2.08534452e-07, 1.92707956e-07, 1.77166161e-07,\n       1.66070968e-07, 1.55984413e-07, 1.42662262e-07, 1.32121739e-07,\n       1.23950352e-07, 1.15231122e-07, 1.06014001e-07, 9.83195231e-08,\n       9.16763070e-08, 8.54164495e-08, 7.95716725e-08, 7.30949775e-08,\n       6.83999016e-08, 6.32663574e-08, 5.86932796e-08, 5.40355363e-08,\n       5.08169358e-08, 4.69286796e-08, 4.36662201e-08, 4.02685205e-08,\n       3.75854672e-08, 3.45954486e-08, 3.21261298e-08, 2.99335719e-08,\n       2.76210958e-08, 2.57590276e-08, 2.37743626e-08, 2.19566646e-08,\n       2.03779393e-08, 1.91004485e-08, 1.76288500e-08, 1.61289740e-08,\n       1.51303355e-08, 1.39899979e-08, 1.28398237e-08, 1.18108433e-08,\n       1.09313495e-08, 1.00986360e-08, 9.47735594e-09, 8.67012459e-09,\n       8.04143051e-09, 7.44047659e-09, 6.75043608e-09, 6.26762166e-09,\n       5.81856303e-09, 5.33353139e-09, 4.91423659e-09, 4.47560427e-09,\n       4.13220892e-09, 3.79979348e-09, 3.53743064e-09, 3.20979621e-09]))}\n```\n:::\n:::\n\n\nEen overzicht van alle resultaten:\n\n::: {#e233e5ae .cell execution_count=12}\n``` {.python .cell-code}\nplt.figure(figsize = [8, 5])\nplt.grid()\n\nfor _loc in alle_hbns:\n    if alle_hbns[_loc] is not None:\n        plt.plot(1 / alle_hbns[_loc].exceedance_frequency, alle_hbns[_loc].level, label = _loc)\n\nplt.legend(loc = \"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn HBN met q = 10 l/m/s\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 10_00_000)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(4, 13)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](03. HBN_files/figure-html/cell-13-output-1.png){width=659 height=451}\n:::\n:::\n\n\n\n",
    "supporting": [
      "03. HBN_files"
    ],
    "filters": [],
    "includes": {}
  }
}