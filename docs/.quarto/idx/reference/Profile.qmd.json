{"title":"Profile","markdown":{"headingText":"Profile","headingAttr":{"id":"pydra_core.Profile","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n```python\nProfile(self, profile_name='Profile')\n```\n\nProfile class\n\nTODO: Implement support for sheet piles\n\n## Attributes\n\n| Name | Description |\n| --- | --- |\n| [breakwater_level](#pydra_core.Profile.breakwater_level) | Convert a string or number to a floating-point number, if possible. |\n| [breakwater_type](#pydra_core.Profile.breakwater_type) | Breakwater classes for profiles. |\n| [dike_crest_level](#pydra_core.Profile.dike_crest_level) | The type of the None singleton. |\n| [dike_orientation](#pydra_core.Profile.dike_orientation) | The type of the None singleton. |\n| [dike_roughness](#pydra_core.Profile.dike_roughness) | The type of the None singleton. |\n| [dike_x_coordinates](#pydra_core.Profile.dike_x_coordinates) | The type of the None singleton. |\n| [dike_y_coordinates](#pydra_core.Profile.dike_y_coordinates) | The type of the None singleton. |\n| [foreland_x_coordinates](#pydra_core.Profile.foreland_x_coordinates) | The type of the None singleton. |\n| [foreland_y_coordinates](#pydra_core.Profile.foreland_y_coordinates) | The type of the None singleton. |\n| [profile_name](#pydra_core.Profile.profile_name) | The type of the None singleton. |\n\n## Methods\n\n| Name | Description |\n| --- | --- |\n| [calculate_crest_level](#pydra_core.Profile.calculate_crest_level) | Calculate the crest level for a given overtopping discharge |\n| [calculate_overtopping](#pydra_core.Profile.calculate_overtopping) | Calculate the overtopping discharge |\n| [calculate_runup](#pydra_core.Profile.calculate_runup) | Calculate the runup height |\n| [draw_profile](#pydra_core.Profile.draw_profile) | Draw a cross-section of the profile |\n| [from_dictionary](#pydra_core.Profile.from_dictionary) | Create a profile from a dictionary |\n| [from_gebugekb_tool](#pydra_core.Profile.from_gebugekb_tool) | Import a profile from the GEBUGEKB plugin. |\n| [from_prfl](#pydra_core.Profile.from_prfl) | Import a profile from a .prfl file |\n| [has_foreland](#pydra_core.Profile.has_foreland) | Returns whether the profile has a foreland or breakwater |\n| [remove_breakwater](#pydra_core.Profile.remove_breakwater) | Remove the breakwater |\n| [remove_foreland](#pydra_core.Profile.remove_foreland) | Remove the foreland |\n| [set_breakwater](#pydra_core.Profile.set_breakwater) | Change the breakwater |\n| [set_dike_crest_level](#pydra_core.Profile.set_dike_crest_level) | Change the crest level |\n| [set_dike_geometry](#pydra_core.Profile.set_dike_geometry) | Change the geometry of the outer slope of the dike |\n| [set_dike_orientation](#pydra_core.Profile.set_dike_orientation) | Change the dike orientation |\n| [set_foreland_geometry](#pydra_core.Profile.set_foreland_geometry) | Change the geometry of the foreland |\n| [to_dict](#pydra_core.Profile.to_dict) | Export Profile to dictionary |\n| [to_prfl](#pydra_core.Profile.to_prfl) | Export to a prfl file |\n| [transform_wave_conditions](#pydra_core.Profile.transform_wave_conditions) | Transform the wave conditions for the schematized foreland |\n| [validate_profile](#pydra_core.Profile.validate_profile) | Function to validate the profile. |\n\n### calculate_crest_level { #pydra_core.Profile.calculate_crest_level }\n\n```python\nProfile.calculate_crest_level(\n    q_overtopping,\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\n```\n\nCalculate the crest level for a given overtopping discharge\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name                    | Type                 | Description                                                                | Default    |\n|-------------------------|----------------------|----------------------------------------------------------------------------|------------|\n| q_overtopping           | float                | Critical overtopping discharge                                             | _required_ |\n| water_level             | Union\\[float, list\\] | List or float with the water level                                         | _required_ |\n| significant_wave_height | Union\\[float, list\\] | List or float with the significant wave height                             | _required_ |\n| spectral_wave_period    | Union\\[float, list\\] | List or float with the spectral wave period                                | _required_ |\n| wave_direction          | Union\\[float, list\\] | List or float with the wave direction                                      | _required_ |\n| tp_tspec                | float                | Ratio between Tp and Tspec, only used for dam and foreland (default : 1.1) | `1.1`      |\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type                 | Description                        |\n|--------|----------------------|------------------------------------|\n|        | Union\\[float, list\\] | List or float with the crest level |\n\n### calculate_overtopping { #pydra_core.Profile.calculate_overtopping }\n\n```python\nProfile.calculate_overtopping(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\n```\n\nCalculate the overtopping discharge\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name                    | Type                 | Description                                                                | Default    |\n|-------------------------|----------------------|----------------------------------------------------------------------------|------------|\n| water_level             | Union\\[float, list\\] | List or float with the water level                                         | _required_ |\n| significant_wave_height | Union\\[float, list\\] | List or float with the significant wave height                             | _required_ |\n| spectral_wave_period    | Union\\[float, list\\] | List or float with the spectral wave period                                | _required_ |\n| wave_direction          | Union\\[float, list\\] | List or float with the wave direction                                      | _required_ |\n| tp_tspec                | float                | Ratio between Tp and Tspec, only used for dam and foreland (default : 1.1) | `1.1`      |\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type                 | Description                                  |\n|--------|----------------------|----------------------------------------------|\n|        | Union\\[float, list\\] | List or float with the overtopping discharge |\n\n### calculate_runup { #pydra_core.Profile.calculate_runup }\n\n```python\nProfile.calculate_runup(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\n```\n\nCalculate the runup height\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name                    | Type                 | Description                                                                | Default    |\n|-------------------------|----------------------|----------------------------------------------------------------------------|------------|\n| water_level             | Union\\[float, list\\] | List or float with the water level                                         | _required_ |\n| significant_wave_height | Union\\[float, list\\] | List or float with the significant wave height                             | _required_ |\n| spectral_wave_period    | Union\\[float, list\\] | List or float with the spectral wave period                                | _required_ |\n| wave_direction          | Union\\[float, list\\] | List or float with the wave direction                                      | _required_ |\n| tp_tspec                | float                | Ratio between Tp and Tspec, only used for dam and foreland (default : 1.1) | `1.1`      |\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type                 | Description                         |\n|--------|----------------------|-------------------------------------|\n|        | Union\\[float, list\\] | List or float with the runup height |\n\n### draw_profile { #pydra_core.Profile.draw_profile }\n\n```python\nProfile.draw_profile()\n```\n\nDraw a cross-section of the profile\n\n### from_dictionary { #pydra_core.Profile.from_dictionary }\n\n```python\nProfile.from_dictionary(dictionary)\n```\n\nCreate a profile from a dictionary\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name       | Type   | Description                          | Default    |\n|------------|--------|--------------------------------------|------------|\n| dictionary | dict   | Dictionary with all profile settings | _required_ |\n\n### from_gebugekb_tool { #pydra_core.Profile.from_gebugekb_tool }\n\n```python\nProfile.from_gebugekb_tool(sql_path, profile_name='Profile', berm_slope=1 / 100)\n```\n\nImport a profile from the GEBUGEKB plugin.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name         | Type   | Description                                        | Default     |\n|--------------|--------|----------------------------------------------------|-------------|\n| sql_path     | str    | Path to the '1.sql' file                           | _required_  |\n| profile_name | str    | Name of the profile (default: 'Profile')           | `'Profile'` |\n| berm_slope   | float  | If applicable: slope of the berm (default : 1/100) | `1 / 100`   |\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type    | Description    |\n|--------|---------|----------------|\n|        | Profile | Profile object |\n\n### from_prfl { #pydra_core.Profile.from_prfl }\n\n```python\nProfile.from_prfl(prfl_path, profile_name='Profile')\n```\n\nImport a profile from a .prfl file\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name         | Type   | Description                              | Default     |\n|--------------|--------|------------------------------------------|-------------|\n| prfl_path    | str    | Path to the '.prfl' file                 | _required_  |\n| profile_name | str    | Name of the profile (default: 'Profile') | `'Profile'` |\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type    | Description    |\n|--------|---------|----------------|\n|        | Profile | Profile object |\n\n### has_foreland { #pydra_core.Profile.has_foreland }\n\n```python\nProfile.has_foreland()\n```\n\nReturns whether the profile has a foreland or breakwater\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type   | Description                                      |\n|--------|--------|--------------------------------------------------|\n|        | bool   | True if the profile has a foreland or breakwater |\n\n### remove_breakwater { #pydra_core.Profile.remove_breakwater }\n\n```python\nProfile.remove_breakwater()\n```\n\nRemove the breakwater\nWrapper for set_breakwater()\n\n### remove_foreland { #pydra_core.Profile.remove_foreland }\n\n```python\nProfile.remove_foreland()\n```\n\nRemove the foreland\nWrapper for set_foreland_geometry()\n\n### set_breakwater { #pydra_core.Profile.set_breakwater }\n\n```python\nProfile.set_breakwater(breakwater_type=None, breakwater_level=0.0)\n```\n\nChange the breakwater\n\n### set_dike_crest_level { #pydra_core.Profile.set_dike_crest_level }\n\n```python\nProfile.set_dike_crest_level(dike_crest_level)\n```\n\nChange the crest level\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name        | Type   | Description                 | Default    |\n|-------------|--------|-----------------------------|------------|\n| crest_level | float  | The crest level of the dike | _required_ |\n\n### set_dike_geometry { #pydra_core.Profile.set_dike_geometry }\n\n```python\nProfile.set_dike_geometry(\n    dike_x_coordinates,\n    dike_y_coordinates,\n    dike_roughness=None,\n)\n```\n\nChange the geometry of the outer slope of the dike\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name               | Type   | Description                                                        | Default    |\n|--------------------|--------|--------------------------------------------------------------------|------------|\n| dike_x_coordinates | list   | A list with the x coordinates of the profile                       | _required_ |\n| dike_y_coordinates | list   | A list with the y coordinates of the profile                       | _required_ |\n| dike_roughness     | list   | A list with the roughness of the profile (default : all parts 1.0) | `None`     |\n\n### set_dike_orientation { #pydra_core.Profile.set_dike_orientation }\n\n```python\nProfile.set_dike_orientation(dike_orientation)\n```\n\nChange the dike orientation\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name             | Type   | Description          | Default    |\n|------------------|--------|----------------------|------------|\n| dike_orientation | float  | The dike orientation | _required_ |\n\n### set_foreland_geometry { #pydra_core.Profile.set_foreland_geometry }\n\n```python\nProfile.set_foreland_geometry(\n    foreland_x_coordinates=None,\n    foreland_y_coordinates=None,\n)\n```\n\nChange the geometry of the foreland\nSetting the foreland x and y coordinates to None will remove the foreland.\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name                   | Type   | Description                                                   | Default   |\n|------------------------|--------|---------------------------------------------------------------|-----------|\n| foreland_x_coordinates | list   | A list with the x coordinates of the foreland (default: None) | `None`    |\n| foreland_y_coordinates | list   | A list with the y coordinates of the foreland (default: None) | `None`    |\n\n### to_dict { #pydra_core.Profile.to_dict }\n\n```python\nProfile.to_dict()\n```\n\nExport Profile to dictionary\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type       | Description                          |\n|--------|------------|--------------------------------------|\n|        | dictionary | Dictionary with all profile settings |\n\n### to_prfl { #pydra_core.Profile.to_prfl }\n\n```python\nProfile.to_prfl(export_path, id='Onbekend000', memo='')\n```\n\nExport to a prfl file\n\nexport_path : str\n    Path to where the profile has to be exported\nid : str\n    Id used in RisKeer\nmemo : str\n    Memo to be added to the prfl file\n\n### transform_wave_conditions { #pydra_core.Profile.transform_wave_conditions }\n\n```python\nProfile.transform_wave_conditions(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    force_array=False,\n)\n```\n\nTransform the wave conditions for the schematized foreland\n\n#### Parameters {.doc-section .doc-section-parameters}\n\n| Name                    | Type                 | Description                                                                | Default    |\n|-------------------------|----------------------|----------------------------------------------------------------------------|------------|\n| water_level             | Union\\[float, list\\] | Water level                                                                | _required_ |\n| significant_wave_height | Union\\[float, list\\] | Significant wave height                                                    | _required_ |\n| spectral_wave_period    | Union\\[float, list\\] | Spectral wave period                                                       | _required_ |\n| wave_direction          | Union\\[float, list\\] | Wave direction                                                             | _required_ |\n| tp_tspec                | float                | Ratio between Tp and Tspec, only used for dam and foreland (default : 1.1) | `1.1`      |\n| force_array             | bool                 | Always force to return an array                                            | `False`    |\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type                                                    | Description                                                  |\n|--------|---------------------------------------------------------|--------------------------------------------------------------|\n|        | Tuple\\[np.ndarray, np.ndarray, np.ndarray, np.ndarray\\] | Water level and transformed wave conditions (h, hs, tp, dir) |\n\n### validate_profile { #pydra_core.Profile.validate_profile }\n\n```python\nProfile.validate_profile()\n```\n\nFunction to validate the profile.\n\n#### Returns {.doc-section .doc-section-returns}\n\n| Name   | Type   | Description               |\n|--------|--------|---------------------------|\n|        | bool   | True if the profile is OK |","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Profile.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","quartodoc":{"style":"pkgdown","dir":"../reference","title":"API Reference","package":"pydra_core","parser":"numpy","dynamic":true,"rewrite_all_pages":true,"options":{"include_inherited":true,"include_empty":true,"include_attributes":true,"include_classes":true,"include_functions":true}},"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}