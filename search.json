[
  {
    "objectID": "reference/WaterSystem.html",
    "href": "reference/WaterSystem.html",
    "title": "WaterSystem",
    "section": "",
    "text": "WaterSystem()\nA class representing different water systems in the Netherlands.\nWaterSystem is an enumeration representing a specific water system in The Netherlands and is defined with a unique integer value (WBI2017 Appendix II). The enumeration members include both tidal and non-tidal water systems, such as rivers, lakes, seas, and coastal regions.\n\n\n\n\n\nName\nDescription\n\n\n\n\nCOAST_CENTRAL\nA class representing different water systems in the Netherlands.\n\n\nCOAST_DUNES\nA class representing different water systems in the Netherlands.\n\n\nCOAST_NORTH\nA class representing different water systems in the Netherlands.\n\n\nCOAST_SOUTH\nA class representing different water systems in the Netherlands.\n\n\nDIEFDIJK\nA class representing different water systems in the Netherlands.\n\n\nEASTERN_SCHELDT\nA class representing different water systems in the Netherlands.\n\n\nEUROPOORT\nA class representing different water systems in the Netherlands.\n\n\nGREVELINGEN\nA class representing different water systems in the Netherlands.\n\n\nHOLLANDSCHE_IJSSEL\nA class representing different water systems in the Netherlands.\n\n\nIJSSEL_DELTA\nA class representing different water systems in the Netherlands.\n\n\nIJSSEL_LAKE\nA class representing different water systems in the Netherlands.\n\n\nMARKER_LAKE\nA class representing different water systems in the Netherlands.\n\n\nMEUSE_NON_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nMEUSE_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nMEUSE_VALLEY_NON_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nRHINE_NON_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nRHINE_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nVECHT_DELTA\nA class representing different water systems in the Netherlands.\n\n\nVELUWE_LAKES\nA class representing different water systems in the Netherlands.\n\n\nVOLKERAK_ZOOMMEER\nA class representing different water systems in the Netherlands.\n\n\nWADDEN_SEA_EAST\nA class representing different water systems in the Netherlands.\n\n\nWADDEN_SEA_WEST\nA class representing different water systems in the Netherlands.\n\n\nWESTERN_SCHELDT\nA class representing different water systems in the Netherlands."
  },
  {
    "objectID": "reference/WaterSystem.html#attributes",
    "href": "reference/WaterSystem.html#attributes",
    "title": "WaterSystem",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nCOAST_CENTRAL\nA class representing different water systems in the Netherlands.\n\n\nCOAST_DUNES\nA class representing different water systems in the Netherlands.\n\n\nCOAST_NORTH\nA class representing different water systems in the Netherlands.\n\n\nCOAST_SOUTH\nA class representing different water systems in the Netherlands.\n\n\nDIEFDIJK\nA class representing different water systems in the Netherlands.\n\n\nEASTERN_SCHELDT\nA class representing different water systems in the Netherlands.\n\n\nEUROPOORT\nA class representing different water systems in the Netherlands.\n\n\nGREVELINGEN\nA class representing different water systems in the Netherlands.\n\n\nHOLLANDSCHE_IJSSEL\nA class representing different water systems in the Netherlands.\n\n\nIJSSEL_DELTA\nA class representing different water systems in the Netherlands.\n\n\nIJSSEL_LAKE\nA class representing different water systems in the Netherlands.\n\n\nMARKER_LAKE\nA class representing different water systems in the Netherlands.\n\n\nMEUSE_NON_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nMEUSE_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nMEUSE_VALLEY_NON_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nRHINE_NON_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nRHINE_TIDAL\nA class representing different water systems in the Netherlands.\n\n\nVECHT_DELTA\nA class representing different water systems in the Netherlands.\n\n\nVELUWE_LAKES\nA class representing different water systems in the Netherlands.\n\n\nVOLKERAK_ZOOMMEER\nA class representing different water systems in the Netherlands.\n\n\nWADDEN_SEA_EAST\nA class representing different water systems in the Netherlands.\n\n\nWADDEN_SEA_WEST\nA class representing different water systems in the Netherlands.\n\n\nWESTERN_SCHELDT\nA class representing different water systems in the Netherlands."
  },
  {
    "objectID": "reference/Location.html",
    "href": "reference/Location.html",
    "title": "Location",
    "section": "",
    "text": "Location(self, settings, profile=None)\nThis is a class for one HRDLocation. This class contains the Settings, the WaterSystem mode (which is the model describing the statistics and loading) and a Profile. Which is a schematisation of the cross-section.\n\n\n\n\n\nName\nDescription\n\n\n\n\nmodel\n\n\n\nprofile\n\n\n\nsettings\n\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nget_model\nReturns the WaterSystem model.\n\n\nget_profile\nReturn the Profile object\n\n\nget_settings\nReturn the Settings object.\n\n\nhas_profile\nReturns whether of not a profile is assigned.\n\n\nremove_profile\nRemove the Profile from the Location class.\n\n\nset_profile\nSet the Profile for this location. By default, profile is none. Which\n\n\nset_settings\nSet the Settings for this location.\n\n\n\n\n\nLocation.get_model()\nReturns the WaterSystem model.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nWaterSystem\nThe WaterSystem model\n\n\n\n\n\n\n\nLocation.get_profile()\nReturn the Profile object\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nLoading\nThe Loading object for this Location\n\n\n\n\n\n\n\nLocation.get_settings()\nReturn the Settings object.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nSettings\nThe Settings object for this Location\n\n\n\n\n\n\n\nLocation.has_profile()\nReturns whether of not a profile is assigned.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nProfile assigned to Location\n\n\n\n\n\n\n\nLocation.remove_profile()\nRemove the Profile from the Location class.\n\n\n\nLocation.set_profile(profile=None)\nSet the Profile for this location. By default, profile is none. Which deletes the profile from this location.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprofile\nProfile\nProfile object (default: None)\nNone\n\n\n\n\n\n\n\nLocation.set_settings(settings)\nSet the Settings for this location.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nSettings\nSettings object\nrequired"
  },
  {
    "objectID": "reference/Location.html#attributes",
    "href": "reference/Location.html#attributes",
    "title": "Location",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nmodel\n\n\n\nprofile\n\n\n\nsettings"
  },
  {
    "objectID": "reference/Location.html#methods",
    "href": "reference/Location.html#methods",
    "title": "Location",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nget_model\nReturns the WaterSystem model.\n\n\nget_profile\nReturn the Profile object\n\n\nget_settings\nReturn the Settings object.\n\n\nhas_profile\nReturns whether of not a profile is assigned.\n\n\nremove_profile\nRemove the Profile from the Location class.\n\n\nset_profile\nSet the Profile for this location. By default, profile is none. Which\n\n\nset_settings\nSet the Settings for this location.\n\n\n\n\n\nLocation.get_model()\nReturns the WaterSystem model.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nWaterSystem\nThe WaterSystem model\n\n\n\n\n\n\n\nLocation.get_profile()\nReturn the Profile object\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nLoading\nThe Loading object for this Location\n\n\n\n\n\n\n\nLocation.get_settings()\nReturn the Settings object.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nSettings\nThe Settings object for this Location\n\n\n\n\n\n\n\nLocation.has_profile()\nReturns whether of not a profile is assigned.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nProfile assigned to Location\n\n\n\n\n\n\n\nLocation.remove_profile()\nRemove the Profile from the Location class.\n\n\n\nLocation.set_profile(profile=None)\nSet the Profile for this location. By default, profile is none. Which deletes the profile from this location.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprofile\nProfile\nProfile object (default: None)\nNone\n\n\n\n\n\n\n\nLocation.set_settings(settings)\nSet the Settings for this location.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nSettings\nSettings object\nrequired"
  },
  {
    "objectID": "reference/HRDatabase.html",
    "href": "reference/HRDatabase.html",
    "title": "HRDatabase",
    "section": "",
    "text": "HRDatabase(self, database_path)\nHRDatabase class\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nwatersystem, WaterSystem\n\nWater system of the dike trajectory\n\n\nlocations, list\n\nList with all locations in the database\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\ncheck_location\nCheck if a hrdlocation exists within the database\n\n\ncreate_location\nCreates a location based upon the Settings object\n\n\nget_location\nReturns the Location class of a hrdlocation.\n\n\nget_location_names\nReturn a list of all hrdlocations in the database\n\n\nget_settings\nReturns the Settings class of a hrdlocation\n\n\nget_water_system\nA method that returns the water system corresponding to the trajectory.\n\n\n\n\n\nHRDatabase.check_location(hrdlocation)\nCheck if a hrdlocation exists within the database\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nhrdlocation\nstr\nThe hrdlocation (uitvoerpunt)\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nWhether the hrdlocation is in the database\n\n\n\n\n\n\n\nHRDatabase.create_location(settings)\nCreates a location based upon the Settings object\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nSettings\nThe Settings object of a location\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nLocation\nThe Location object for the given settings\n\n\n\n\n\n\n\nHRDatabase.get_location(hrdlocation)\nReturns the Location class of a hrdlocation. Uses the default set of parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nhrdlocation\nstr\nThe hrdlocation (uitvoerpunt)\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nLocation\nThe Location object for the hrdlocation\n\n\n\n\n\n\n\nHRDatabase.get_location_names()\nReturn a list of all hrdlocations in the database\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nlist[str]\nList with all hrdlocation names\n\n\n\n\n\n\n\nHRDatabase.get_settings(hrdlocation)\nReturns the Settings class of a hrdlocation Useful for when you manually want to adjust the settings To create a location using the settings use the function ‘create_location(settings)’\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nhrdlocation\nstr\nThe hrdlocation (uitvoerpunt)\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nSettings\nThe Settings object for the hrdlocation\n\n\n\n\n\n\n\nHRDatabase.get_water_system()\nA method that returns the water system corresponding to the trajectory.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nWaterSystem\nWater system of the trajectory"
  },
  {
    "objectID": "reference/HRDatabase.html#attributes",
    "href": "reference/HRDatabase.html#attributes",
    "title": "HRDatabase",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nwatersystem, WaterSystem\n\nWater system of the dike trajectory\n\n\nlocations, list\n\nList with all locations in the database"
  },
  {
    "objectID": "reference/HRDatabase.html#methods",
    "href": "reference/HRDatabase.html#methods",
    "title": "HRDatabase",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncheck_location\nCheck if a hrdlocation exists within the database\n\n\ncreate_location\nCreates a location based upon the Settings object\n\n\nget_location\nReturns the Location class of a hrdlocation.\n\n\nget_location_names\nReturn a list of all hrdlocations in the database\n\n\nget_settings\nReturns the Settings class of a hrdlocation\n\n\nget_water_system\nA method that returns the water system corresponding to the trajectory.\n\n\n\n\n\nHRDatabase.check_location(hrdlocation)\nCheck if a hrdlocation exists within the database\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nhrdlocation\nstr\nThe hrdlocation (uitvoerpunt)\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nWhether the hrdlocation is in the database\n\n\n\n\n\n\n\nHRDatabase.create_location(settings)\nCreates a location based upon the Settings object\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nSettings\nThe Settings object of a location\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nLocation\nThe Location object for the given settings\n\n\n\n\n\n\n\nHRDatabase.get_location(hrdlocation)\nReturns the Location class of a hrdlocation. Uses the default set of parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nhrdlocation\nstr\nThe hrdlocation (uitvoerpunt)\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nLocation\nThe Location object for the hrdlocation\n\n\n\n\n\n\n\nHRDatabase.get_location_names()\nReturn a list of all hrdlocations in the database\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nlist[str]\nList with all hrdlocation names\n\n\n\n\n\n\n\nHRDatabase.get_settings(hrdlocation)\nReturns the Settings class of a hrdlocation Useful for when you manually want to adjust the settings To create a location using the settings use the function ‘create_location(settings)’\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nhrdlocation\nstr\nThe hrdlocation (uitvoerpunt)\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nSettings\nThe Settings object for the hrdlocation\n\n\n\n\n\n\n\nHRDatabase.get_water_system()\nA method that returns the water system corresponding to the trajectory.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nWaterSystem\nWater system of the trajectory"
  },
  {
    "objectID": "reference/ExceedanceFrequencyLineExperimental.html",
    "href": "reference/ExceedanceFrequencyLineExperimental.html",
    "title": "ExceedanceFrequencyLineExperimental",
    "section": "",
    "text": "ExceedanceFrequencyLineExperimental(\n    self,\n    result_variable,\n    model_uncertainty=True,\n    levels=None,\n    step_size=0.1,\n)\nCalculate a frequency line for a result variable (e.g. h (waterlevel), hs (significant wave height)) for a location\n\n\n\n\n\nName\nDescription\n\n\n\n\ncalculate\nExecute a calculation\n\n\ncalculate_location\nCalculate the exceedance probability of the variable at a given set of levels.\n\n\nset_levels\nChange the levels.\n\n\nset_result_variable\nChange the result variable for which the frequency line will be calculated.\n\n\nset_step_size\nChange the step size of the frequency line.\n\n\nuse_model_uncertainty\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\nExceedanceFrequencyLineExperimental.calculate(input)\nExecute a calculation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninput\nUnion[Location, HRDatabase]\nThe input\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.calculate_location(location)\nCalculate the exceedance probability of the variable at a given set of levels. If the levels are not specified, they will be chosen at the 1st and 99th percentile of all values in the database.\n\n\nlocation : Location The Location object\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nFrequencyLine\nFrequency line of the result variable\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.set_levels(levels=None)\nChange the levels. If levels is not defined, the frequency line is calculated based upon the 1st and 99th percentile.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nlevels\nlist\nThe levels at which the exceedance probability has to be calculated\nNone\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.set_result_variable(result_variable)\nChange the result variable for which the frequency line will be calculated.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nresult_variable\nstr\nThe result variable for which the frequency line will be calculated\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.set_step_size(step_size)\nChange the step size of the frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstep_size\nfloat\nThe step size of the frequency line\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.use_model_uncertainty(model_uncertainty)\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty\nbool\nEnable or disable the use of model uncertainties\nrequired"
  },
  {
    "objectID": "reference/ExceedanceFrequencyLineExperimental.html#methods",
    "href": "reference/ExceedanceFrequencyLineExperimental.html#methods",
    "title": "ExceedanceFrequencyLineExperimental",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncalculate\nExecute a calculation\n\n\ncalculate_location\nCalculate the exceedance probability of the variable at a given set of levels.\n\n\nset_levels\nChange the levels.\n\n\nset_result_variable\nChange the result variable for which the frequency line will be calculated.\n\n\nset_step_size\nChange the step size of the frequency line.\n\n\nuse_model_uncertainty\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\nExceedanceFrequencyLineExperimental.calculate(input)\nExecute a calculation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninput\nUnion[Location, HRDatabase]\nThe input\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.calculate_location(location)\nCalculate the exceedance probability of the variable at a given set of levels. If the levels are not specified, they will be chosen at the 1st and 99th percentile of all values in the database.\n\n\nlocation : Location The Location object\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nFrequencyLine\nFrequency line of the result variable\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.set_levels(levels=None)\nChange the levels. If levels is not defined, the frequency line is calculated based upon the 1st and 99th percentile.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nlevels\nlist\nThe levels at which the exceedance probability has to be calculated\nNone\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.set_result_variable(result_variable)\nChange the result variable for which the frequency line will be calculated.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nresult_variable\nstr\nThe result variable for which the frequency line will be calculated\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.set_step_size(step_size)\nChange the step size of the frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstep_size\nfloat\nThe step size of the frequency line\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLineExperimental.use_model_uncertainty(model_uncertainty)\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty\nbool\nEnable or disable the use of model uncertainties\nrequired"
  },
  {
    "objectID": "reference/Breakwater.html",
    "href": "reference/Breakwater.html",
    "title": "Breakwater",
    "section": "",
    "text": "Breakwater()\nBreakwater classes for profiles.\nThe ‘Breakwater’ is an enumeration representing specific types of breakwaters located in front of the profile.\n\n\n\n\n\nName\nDescription\n\n\n\n\nCAISSON\nBreakwater classes for profiles.\n\n\nNO_BREAKWATER\nBreakwater classes for profiles.\n\n\nRUBBLE_MOUND\nBreakwater classes for profiles.\n\n\nVERTICAL_WALL\nBreakwater classes for profiles."
  },
  {
    "objectID": "reference/Breakwater.html#attributes",
    "href": "reference/Breakwater.html#attributes",
    "title": "Breakwater",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nCAISSON\nBreakwater classes for profiles.\n\n\nNO_BREAKWATER\nBreakwater classes for profiles.\n\n\nRUBBLE_MOUND\nBreakwater classes for profiles.\n\n\nVERTICAL_WALL\nBreakwater classes for profiles."
  },
  {
    "objectID": "examples.html",
    "href": "examples.html",
    "title": "Examples",
    "section": "",
    "text": "Examples\nThere are currently three example notebooks:\n\nOverschrijdingsfrequentielijnen\nProfielen\nHBN"
  },
  {
    "objectID": "examples/02.Profielen.html",
    "href": "examples/02.Profielen.html",
    "title": "Profielen",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\nfrom copy import deepcopy\nimport pydra_core as pydra\n\nIn deze versie van Pydra is het profiel losgekoppeld van de belasting en statistiek. Hierdoor is het mogelijk om alleen een profiel te maken en overslag en oploop te berekenen zonder het koppelen van belasting en statistiek.\nEr zijn drie manieren om een profiel aan te maken: \n\nHandmatig\n\n&lt;li&gt;Import een .prfl&lt;/li&gt;\n&lt;li&gt;Import een schematisatie vanuit de GEBU-GEKB tool&lt;/li&gt;\n\n\nProfiel\n\nHet Profile is de basis voor elk profiel. Als argument moet een naam voor het profiel worden opgegeven.\n\nprofiel = pydra.Profile(\"test_profiel\")\n\n\nHandmatig\n\nHet Profile object heeft allemaal functies (startend met set_…()) om het profiel te veranderen. Er zijn globaal drie dingen die aan een profiel kan veranderen: \n\nDijkgeometrie\n\n&lt;li&gt;Voorland&lt;/li&gt;\n&lt;li&gt;Voorliggende keringen&lt;/li&gt;\n\nDijkgeometrie Voordat een profiel werkt moet een kruinhoogte, dijkorientatie en geometrie worden gedefinieerd. Een voorbeeld is gegeven in de onderstaande code.\n\n# Kruinhoogte\nprofiel.set_dike_crest_level(8.0)\n\n# Dijkorientatie\nprofiel.set_dike_orientation(90)\n\n# Dijkgeometrie\nprofiel.set_dike_geometry([-6, 30], [-2, 10], [1.0, 1.0])\n\nDe set_dike_geometry(x, y, r) heeft drie argumenten, de x-coordinaten, de y-coordinaten, en de ruwheden. Eventueel kunnen de ruwheden worden weggelaten, er wordt dan standaard met een ruwheid van 1.0 gerekend.\n\n# Dijkgeometrie\nprofiel.set_dike_geometry([-6, 30], [-2, 10])\n\nMet de draw_profile() functie kan een plot van de doorsnede worden weergegeven.\n\nprofiel.draw_profile()\n\n\n\n\n\n\n\n\nVoorland Een voorland kan worden toegevoegd met set_foreland_geometry(x, y) en heeft twee argumenten, de x-coordinaten en de y-coordinaten. Een profiel wordt altijd zo geschematiseerd dat de dijkteen op x = 0 ligt. Het voorland ligt altijd in het negatieve x-domein en de dijkgeometrie in het positieve x-domein.\n\n# Voorland\nprofiel.set_foreland_geometry([-100, -70], [-3, -2])\n\nMerk op dat ondanks dat we hierboven het voorland hebben gedefinieerd lopend van -100 tot -70, pydra automatisch zorgt dat het voorland aansluit op de teen van de dijk (x = 0). Het voorland wordt dus gecorrigeerd zodat deze loopt van -30 naar 0. Zie de figuur hieronder.\n\nprofiel.draw_profile()\n\n\n\n\n\n\n\n\nVoorliggende kering Een voorliggende kering, zoals een golfbreker kan worden toegevoegd met de functie set_breakwater(breakwater, hoogte). De functie heeft twee argumenten, het type Breakwater (gedefinieerd via Enum) en de hoogte van de Breakwater.\n\n# Importeer de Breakwater Enum\nfrom pydra_core import Breakwater\n\n\"\"\"\nKeuzes:\nBreakwater.NO_BREAKWATER\nBreakwater.CAISSON\nBreakwater.VERTICAL_WALL\nBreakwater.RUBBLE_MOUND\n\"\"\"\n\n# Hier wordt een RubbleMound als Breakwater ingesteld met een hoogte van NAP+3,0m\nprofiel.set_breakwater(Breakwater.RUBBLE_MOUND, 3.0)\n\nDit geeft de volgende doorsnede.\n\nprofiel.draw_profile()\n\n\n\n\n\n\n\n\nVerwijderen van een voorliggende kering/voorland Je kan een voorliggende kering/voorland verwijderen met de functies remove_breakwater() en remove_foreland().\n\n# Verwijder voorland\nprofiel.remove_breakwater()\n\n# Verwijder voorliggende kering\nprofiel.remove_foreland()\n\nNu zonder voorland\n\nprofiel.draw_profile()\n\n\n\n\n\n\n\n\n\nImporteer een .prfl\n\nIn plaats van handmatig een profiel te definiëren is het ook mogelijk om een .prfl te importeren. Hiervoor kan de classmethod Profile.from_prfl(prfl_path) worden gebruikt. Door het optionele argument name te definiëren kan een naam aan het profielbestand worden gegeven.\n\nPRFL_PATH = \"data/profielformaat.prfl\"\n\nprofiel_prfl = pydra.Profile.from_prfl(\n    PRFL_PATH, profile_name=\"Profiel vanuit een prfl\"\n)\n\nDat geeft de volgende doorsnede:\n\nprofiel_prfl.draw_profile()\n\n\n\n\n\n\n\n\n\nImport een schematisatie vanuit de GEBU-GEKB tool\n\nHet is ook mogelijk om een profiel te importeren uit de 1.sql van de GEBU-GEKB plugin voor Hydra-Ring. Hiervoor kan de classmethod Profile.from_gebugekb_tool(sql_path) worden gebruikt. De opzet van de classmethod/functie is hetzelfde als voor het importeren van een .prfl.\n\nSQL_PATH = \"data/1.sql\"\n\nprofiel_sql = pydra.Profile.from_gebugekb_tool(\n    SQL_PATH, profile_name=\"Profiel vanuit een 1.sql\"\n)\n\nDat geeft de volgende doorsnede:\n\nprofiel_sql.draw_profile()\n\n\n\n\n\n\n\n\n\nExporteer het Profile object naar een .prfl\n\nHet is mogelijk om een Profile object te exporteren naar een .prfl. Handig als je bijvoorbeeld schematisaties uit de GEBUGEKB-tool wilt omzetten naar een .prfl, of veel profielen wilt genereren met een loop.\nJe kan een profiel exporteren met de functie to_prfl(export_path). Het is met optionele argumenten mogelijk om een ID (toevoegen van argument id = “voorbeeld_id”) of een memo (toevoegen van argument memo = “een memo”) toe te voegen. Hieronder exporteren we de profielen die we eerder hebben geschematiseerd naar de RO1099 map.\n\n# Zonder ID of memo\nprofiel.to_prfl(\"data/export_profiel_1.prfl\")\n\n# Met memo\nprofiel_prfl.to_prfl(\"data/export_profiel_2.prfl\", memo=\"mooi profiel\")\n\n# Met ID en memo\nprofiel_sql.to_prfl(\n    \"data/export_profiel_3.prfl\", id=\"test\", memo=\"profiel uit de gebu-gekb tool\"\n)\n\n\nGolftransitie over voorland\n\nHet is mogelijk om met het Profile object de golftransitie over het voorland te bepalen. In deze demonstratie bepalen we het effect van het voorland voor het volgende profiel:\n\nprofiel_prfl.draw_profile()\n\n\n\n\n\n\n\n\nDe functie transform_wave_conditions(h, hs, tspec, wdir) kan gebruikt worden om de getransformeerde golfcondities te bepalen. Met het optionele argument tp_tspec wordt de spectrale golfperiode omgerekend naar de piekperiode (welke wordt gebruikt in de DaF module) en vervolgens weer teruggerekend naar de spectrale golfperiode. Standaard is tp_tspec gelijk aan 1.1.\n\n# HR\nh = 6.0\nhs = 2.0\ntspec = 5.0\nwdir = 84\n\n# De invoer kunnen floats of ints zijn\n_h, _hs, _tspec, _wdir = profiel_prfl.transform_wave_conditions(h, hs, tspec, wdir)\n\nprint(\"h\", h, \"-&gt;\", _h)\nprint(\"hs\", hs, \"-&gt;\", _hs)\nprint(\"tspec\", tspec, \"-&gt;\", _tspec)\nprint(\"wdir\", wdir, \"-&gt;\", _wdir)\n\nh 6.0 -&gt; 6.0\nhs 2.0 -&gt; 1.2000734264388144\ntspec 5.0 -&gt; 5.0\nwdir 84 -&gt; 81.43355290660857\n\n\nJe kan ook arrays gebruiken. Merk op dat we hieronder alleen de waterstand h en significante golfhoogte Hs als arrays hebben gedefinieerd. Wanneer je een deel van de input parameters (h, hs, tspec, wdir) als array definieerd en een deel niet, vult pydra deze automatisch aan. In het onderstaande geval worden alle combinaties met een tspec van 5.0 gerekend en een wdir van 84.\n\n# HR\nh = [3.0, 4.0, 5.0, 6.0]\nhs = [2.0, 2.2, 2.4, 2.6]\ntspec = 5.0\nwdir = 84\n\n# De invoer kunnen floats of ints zijn\n_h, _hs, _tspec, _wdir = profiel_prfl.transform_wave_conditions(h, hs, tspec, wdir)\n\nprint(\"h\", h, \"-&gt;\", _h)\nprint(\"hs\", hs, \"-&gt;\", _hs)\nprint(\"tspec\", tspec, \"-&gt;\", _tspec)\nprint(\"wdir\", wdir, \"-&gt;\", _wdir)\n\nh [3.0, 4.0, 5.0, 6.0] -&gt; [3. 4. 5. 6.]\nhs [2.0, 2.2, 2.4, 2.6] -&gt; [0.80432189 1.08827125 1.32752829 1.52129885]\ntspec 5.0 -&gt; [5. 5. 5. 5.]\nwdir 84 -&gt; [78.72302003 79.97242374 80.81683168 81.43355291]\n\n\n\nGolfoverslag en overloop\n\nMet een Profile object kan golfoverslag en overloop bepalen met de functie calculate_overtopping(h, hs, tspec, wdir). Net zoals bij de golftransformatie over het voorland kan de invoer bestaan uit floats, ints, arrays of een combinatie. Hieronder wordt deze functie gedemonstreerd voor dezelfde doorsnede waarbij de golftransformatie over het voorland is gedemonstreerd (zie doorsnede hierboven).\n\n# HR\nh = 4.0\nhs = 2.0\ntspec = 5.0\nwdir = 84\n\n# Overslag\nqov = profiel_prfl.calculate_overtopping(h, hs, tspec, wdir)\nprint(\"qov =\", qov, \"m3/m/s\")\n\nqov = 0.01671347888602151 m3/m/s\n\n\nDoor bijvoorbeeld de waterstand als array te definieren kan heel eenvoudig het overslagdebiet geplot worden tegen de waterstand.\n\n# Bepaal een range aan waterstanden\nh = np.arange(0.0, 6.0, 0.1)\nhs = 1.0\ntspec = 4.0\nwdir = 84\n\n# Overslag\nqov = profiel_prfl.calculate_overtopping(h, hs, tspec, wdir)\n\n# Plot\nplt.figure()\nplt.plot(h, qov, label=\"Overslag\")\nplt.axvline(5.0, ls=\":\", label=\"Kruinhoogte\")\nplt.title(\"Overslagdebiet voor verschillende waterstanden\")\nplt.xlabel(\"Waterstand [NAP+m]\")\nplt.xlim(0, None)\nplt.ylabel(\"Overslagdebiet [m3/m/s]\")\nplt.ylim(0, None)\nplt.legend(loc=\"best\")\nplt.show()\n\n\n\n\n\n\n\n\n\nOploophoogte\n\nHetzelfde is ook mogelijk voor de 2% oploophoogte. Hiervoor kan de functie calculate_runup(h, hs, tspec, wdir) worden gebruikt.\n\n# HR\nh = 4.0\nhs = 2.0\ntspec = 5.0\nwdir = 84\n\n# Oploop\nz2p = profiel_prfl.calculate_runup(h, hs, tspec, wdir)\nprint(\"z2% =\", z2p, \"NAP+m\")\n\nz2% = 6.380539983822968 NAP+m\n\n\nVoorbeeld voor meerdere golfhoogtes bij eenzelfde waterstand, spectrale golfperiode en hoek van golfinval.\n\n# Bepaal een range aan golfhoogtes\nh = 4.0\nhs = np.arange(0.0, 3.0, 0.1)\ntspec = 5.0\nwdir = 84\n\n# Oploop\nz2p = profiel_prfl.calculate_runup(h, hs, tspec, wdir)\n\n# Plot\nplt.figure()\nplt.plot(hs, z2p, label=\"Oploophoogte\")\nplt.title(\"Oploophoogte voor verschillende golfhoogtes\")\nplt.xlabel(\"Significante golfhoogte [m]\")\nplt.xlim(0, None)\nplt.ylabel(\"Oploophoogte [NAP+m]\")\nplt.ylim(4, None)\nplt.legend(loc=\"best\")\nplt.show()\n\n\n\n\n\n\n\n\n\nKruinhoogte bepalen\n\nAls laatste is het mogelijk om de kruinhoogte te bepalen gegeven een overslagdebiet. Dit kan met de functie calculate_crest_level(q_critical, h, hs, tspec, wdir).\n\n# HR\nq = 0.01\nh = 4.0\nhs = 2.0\ntspec = 5.0\nwdir = 84\n\n# Kruinhoogte voor 10 l/m/s\nhbn = profiel_prfl.calculate_crest_level(q, h, hs, tspec, wdir)\nprint(\"Benodigde kruinhoogte =\", hbn, \"NAP+m\")\n\nBenodigde kruinhoogte = 5.14724745829701 NAP+m\n\n\nMet de overslag functie kunnen we makkelijk controleren of deze kruinhoogte klopt\n\n# HR\nq = 0.01\nh = 4.0\nhs = 2.0\ntspec = 5.0\nwdir = 84\n\n# Check\ntest_prfl = deepcopy(profiel_prfl)\ntest_prfl.set_dike_crest_level(hbn)\nqov = test_prfl.calculate_overtopping(h, hs, tspec, wdir)\n\nprint(\"Check met aangepaste kruinhoogte:\", round(qov, 6), \"m3/m/s\")\n\nCheck met aangepaste kruinhoogte: 0.01 m3/m/s\n\n\nAls we dan toch bezig zijn, kunnen we een mooi grafiekje voor de kruinhoogte bepaling niet achterwege laten…\n\n# Bepaal een range aan overslagdebieten\nq = np.arange(0.001, 0.1, 0.001)\nh = 4.0\nhs = 2.0\ntspec = 5.0\nwdir = 84\n\n# Oploop\nhbn = profiel_prfl.calculate_crest_level(q, h, hs, tspec, wdir)\n\n# Plot\nplt.figure()\nplt.plot(q, hbn, label=\"Kruinhoogte\")\nplt.title(\"Kruinhoogte voor verschillende overslagdebieten\")\nplt.xlabel(\"Overslagdebiet [m3/m/s]\")\nplt.xlim(0, None)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(0, None)\nplt.legend(loc=\"best\")\nplt.show()",
    "crumbs": [
      "Profielen"
    ]
  },
  {
    "objectID": "CHANGELOG.html",
    "href": "CHANGELOG.html",
    "title": "Migration to git",
    "section": "",
    "text": "Migration to git\n\nnp.product (depreciated v1.25) loading.py line 288-292:\n                reshaped = tmparr.reshape((tmparr.shape[0], np.prod(tmparr.shape[1:])))\n\n        # Otherwise, only reshape the array\n        else:\n            reshaped = arr.reshape((arr.shape[0], np.prod(arr.shape[1:])))\nruff error: Exp is not defined\n    # TODO: Check if this is correct?\n    # Save\n    if _ip:\n        exp = exp + exceedance_probability * _p\n    else:\n        exp = exceedance_probability * _p\nruff errors (zie eerste paar commits)\n\nsrc_core_uncertainty.py:351:16: E713 [*] Test for membership should be not in\n== None -&gt; is None\n\nLocatie paden werken niet in linux door \\\\ & documentatie is nu in linux:\nFileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/pydra_core/pydra_core/pydra_core/src/pydra_core/data/statistics/Zeewaterstand\\\\Vlissingen\\\\CondPovVlissingen_12u_zichtjaar2017_metOnzHeid.txt'\nHier kunnen we nog in de data be standen wat aanpassen, voor nu vervangen door check op \\\\\nIn pydra_condig\\io\\database_hr.py: ‘continuing without correlation’-&gt; nu een warning, even kijken hoe we dat ook beter afvangen."
  },
  {
    "objectID": "examples/01.Overschrijdingsfrequentielijnen.html",
    "href": "examples/01.Overschrijdingsfrequentielijnen.html",
    "title": "Overschrijdingsfrequentielijnen",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\nimport pydra_core as pydra\n\nAls demonstratie worden overschrijdingsfrequentielijnen voor de Borselle (Westerschelde/Kust) bepaald. Hieronder definiëren we de locatie van de database.\n\nDB_PATH = \"data/WBI2017_Westerschelde_30-4_v03.sqlite\"\n\n\nHRDatabase\n\nMet de HR database maken we een HRDatabase aan. Dit object beheert alle locaties in de HR database en helpt om batch berekeningen te maken.\n\nhrdatabase = pydra.HRDatabase(DB_PATH)\n\nEén van de functies van een HRDatabase object is het uitlezen van de namen van alle uitvoerpunten.\n\nhrdatabase.get_location_names()\n\n['WS_1_30-4_dk_00006',\n 'WS_2_30-4_dk_00005',\n 'WS_1_30-4_dk_00004',\n 'WS_1_30-4_dk_00003',\n 'WS_1_30-4_dk_00002',\n 'WS_1_30-4_dk_00001']\n\n\n\nSettings\n\nMet het HRDatabase maken we een Settings object aan voor het HR-uitvoerpunt ‘WS_1_30-4_dk_00002’. Het Settings object is voor Pydra hetzelfde als het ‘invoer.hyd’ bestand voor Hydra-NL is.\n\nsettings = hrdatabase.get_settings(\"WS_1_30-4_dk_00002\")\n\nDe settings zijn gebaseerd op wat standaard in Hydra-NL (versie 2.8.2) zit. Het is mogelijk om alle settings uit te lezen door het Settings object te printen.\n\nprint(settings)\n\ndatabase_path                  = data/WBI2017_Westerschelde_30-4_v03.sqlite\nlocation                       = WS_1_30-4_dk_00002\nm_max                          = 9.0\nm_step                         = 0.1\nmodel_uncertainty_water_level_steps = 7\nmodel_uncertainty_wave_height_steps = 5\nmodel_uncertainty_wave_period_steps = 5\nperiods_block_duration         = 360.0\nregion                         = 5.0\nsea                            = 11.0\nsea_level_probability_point1   = Zeewaterstand/Vlissingen/CondPovVlissingen_12u_zichtjaar2017_metOnzHeid.txt\nsea_level_probability_point2   = Zeewaterstand/Hansweert/CondPovHansweert_12u_zichtjaar2017_metOnzHeid.txt\nsea_level_probability_point3   = Zeewaterstand/Vlissingen virtueel/CondPovVlissingen-Additional_12u_zichtjaar2017_metOnzHeid.txt\nsea_level_rise                 = 0.0\nsigma_function                 = Sigmafunctie\\Westerschelde\\VS_sigmafunctie_WS_2017.txt\nu_max                          = 55.0\nu_repair                       = True\nu_step                         = 1.0\nwind_direction_probability     = Windrichting\\Westerschelde\\KansenWindrichting_WS_2017.txt\nwind_speed_probability         = Windsnelheid\\Vlissingen\\Ovkanswind_Vlissingen_2017_metOnzHeid.txt\nx_coordinate                   = 38672\ny_coordinate                   = 383394\n\n\nVoordat berekeningen worden gedaan is het mogelijk om het Settings object aan te passen:\n\nprint(\"Origineel:\", settings.m_max)\nsettings.m_max = 10.0\nprint(\"Aangepast:\", settings.m_max)\n\nOrigineel: 9.0\nAangepast: 10.0\n\n\n\nLocation\n\nWanneer je tevreden bent met de settings in het Settings object, kan een Location object worden aangemaakt. Wanneer een location wordt aangemaakt lees Pydra de statistiek in en worden belastingsmodellen gegenereert. De statistiek wordt ingelezen vanuit de data/statistics map in de package. De belastingsmodellen worden geïnitieerd op basis van de eerder gekoppelde HR database in het HRDatabase object.\n\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # future warnings are annoying\nlocation = hrdatabase.create_location(settings)\n# TODO: deze error beter afvangen:\n\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 146\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\n\n\nNu het Location object is aangemaakt voor het HR uitvoerpunt ‘WS_1_30-4_dk_00002’, kan deze gebruikt worden in berekeningen.\n\nOverschrijdingsfrequentielijn voor één uitvoerpunt\n\nPydra heeft verschillende rekenmodules (objecten). Hieronder gebruiken we de ExceedanceFrequencyLine module om de overschrijdingsfrequentielijn te berekenen. Voordat we dat kunnen doen moet eerst een rekenobject worden aangemaakt, hieronder fl. Het rekenobject omvat de instellingen voor de berekening, bijvoorbeeld voor welke variabel een frequentielijn moet worden berekend (hieronder waterstand (h)). Daarnaast zijn er nog een aantal optionele opties, zoals of er met modelonzekerheden moet worden gerekend (standaard : True), de stapgrootte van de frequentielijn (standaard : 0.05) en een aangepast bereik van waterstanden voor de frequentielijn (standaard tussen de 1ste en 99de percentiel vanuit de HR database).\n\nfl = pydra.ExceedanceFrequencyLine(\"h\", model_uncertainty=False)\n\nVervolgens kunnen we met het rekenobject fl een overschrijdingsfrequentielijn bepalen voor HR uitvoerpunt ‘WS_1_30-4_dk_00002’ door de calculate() functie aan te roepen van het rekenobject en het location object als argument mee te geven.\n\nfrequency_line = fl.calculate(location)\n\nDit geeft een overschrijdingsfrequentielijn frequency_line. Het is een object waarin de berekende gegevens (waterstanden en overschrijdingsfrequenties) worden opgeslagen. Als je het object print, zie je wat er allemaal in zit.\n\nprint(frequency_line)\n\nFrequencyLine(level=array([ 4. ,  4.1,  4.2,  4.3,  4.4,  4.5,  4.6,  4.7,  4.8,  4.9,  5. ,\n        5.1,  5.2,  5.3,  5.4,  5.5,  5.6,  5.7,  5.8,  5.9,  6. ,  6.1,\n        6.2,  6.3,  6.4,  6.5,  6.6,  6.7,  6.8,  6.9,  7. ,  7.1,  7.2,\n        7.3,  7.4,  7.5,  7.6,  7.7,  7.8,  7.9,  8. ,  8.1,  8.2,  8.3,\n        8.4,  8.5,  8.6,  8.7,  8.8,  8.9,  9. ,  9.1,  9.2,  9.3,  9.4,\n        9.5,  9.6,  9.7,  9.8,  9.9, 10. ]), exceedance_frequency=array([9.94146683e-02, 6.72207910e-02, 4.56219043e-02, 3.10054478e-02,\n       2.10762468e-02, 1.43146413e-02, 9.71920422e-03, 6.61635072e-03,\n       4.52069251e-03, 3.09403250e-03, 2.11855920e-03, 1.45101223e-03,\n       9.94944663e-04, 6.84217303e-04, 4.72480175e-04, 3.27514920e-04,\n       2.27672043e-04, 1.58622527e-04, 1.10775309e-04, 7.75910268e-05,\n       5.45422174e-05, 3.84913448e-05, 2.72802869e-05, 1.94117645e-05,\n       1.38561679e-05, 9.91612413e-06, 7.11218042e-06, 5.11145157e-06,\n       3.67977424e-06, 2.65317740e-06, 1.91566316e-06, 1.38482833e-06,\n       1.00177892e-06, 7.24892178e-07, 5.24569653e-07, 3.79511375e-07,\n       2.74460333e-07, 1.98370415e-07, 1.43245922e-07, 1.03302292e-07,\n       7.43562337e-08, 5.33828020e-08, 3.81941101e-08, 2.72066508e-08,\n       1.92730724e-08, 1.35607497e-08, 9.46425637e-09, 6.54235874e-09,\n       4.47271814e-09, 3.01935977e-09, 2.00931559e-09, 1.31582993e-09,\n       8.46232495e-10, 5.33113763e-10, 3.27833070e-10, 1.95682813e-10,\n       1.12245544e-10, 6.06302710e-11, 2.93744119e-11, 1.08615462e-11,\n       2.18367023e-12]))\n\n\nHieronder is een plot van de berekende overschrijdingsfrequentielijn gegeven.\n\ntt = np.array([10, 30, 100, 300, 1_000, 3_000, 10_000, 30_000, 100_000])\n\nplt.figure(figsize=[8, 5])\nplt.grid()\nplt.plot(tt, frequency_line.interpolate_exceedance_probability(1 / tt), label=\"Pydra\")\nplt.legend(loc=\"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn waterstand (WS_1_30-4_dk_00002)\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 100_000)\nplt.ylabel(\"Waterstand [NAP+m]\")\nplt.ylim(3.5, 7.0)\nplt.show()\n\n\n\n\n\n\n\n\nWe hebben dezelfde berekening gemaakt met Hydra-NL, wat de onderstaande vergelijking geeft.\n\nhydranl_h = [3.998, 4.28, 4.592, 4.879, 5.198, 5.494, 5.828, 6.141, 6.497]\n\nplt.figure(figsize=[8, 5])\nplt.grid()\nplt.plot(tt, frequency_line.interpolate_exceedance_probability(1 / tt), label=\"Pydra\")\nplt.plot(tt, hydranl_h, \":\", label=\"Hydra-NL\")\nplt.legend(loc=\"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn waterstand (WS_1_30-4_dk_00002)\")\nplt.xscale(\"log\")\nplt.xticks([1, 10, 100, 1_000, 10_000, 100_000, 1_000_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 100_000)\nplt.ylabel(\"Waterstand [NAP+m]\")\nplt.ylim(3.5, 7.0)\nplt.show()\n\n\n\n\n\n\n\n\n\nOverschrijdingsfrequentielijn voor een heel traject\n\nHet is ook mogelijk om overschrijdingsfrequentielijnen voor een heel traject te genereren. Laten we weer een rekenobject fl aanmaken. Merk op dat we ten opzichte van hierboven dit maal model_uncertainty = False hebben toegevoegd. Dit betekent dat we nu zonder modelonzekerheden rekenen.\n\nfl = pydra.ExceedanceFrequencyLine(\"hs\", model_uncertainty=False)\n\nDoor het HRDatabase object ‘hrdatabase’ mee te geven als argument in de calculate() functie, bepaald Pydra de overschrijdingsfrequentielijn voor alle uitvoerpunten in de HR database. Voor locaties die al zijn gedefinieerd, zoals ‘WS_1_30-4_dk_00002’, wordt het eerder gedefinieerde Location object gebruikt. Voor uitvoerpunten die nog niet zijn gedefinieerd creëert Pydra automatisch een Location object met de standaardwaarden voor het water systeem (net zoals Hydra-NL een ‘invoer.hyd’ aanmaakt in de beoordelingsmodus).\nMerk op dat dus in dit geval voor uitvoerpunt ‘WS_1_30-4_dk_00002’ met een mmax van NAP+10,0m wordt gerekend omdat we die eerder hebben aangepast. Voor de overige locaties wordt met de standaard NAP+9,0m gerekend.\n\nfreq_lines = fl.calculate(hrdatabase)\n# TODO: deze errors beter afvangen:\n\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 142\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 143\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 144\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 145\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 147\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\n\n\nOmdat we nu een heel traject doorrekenen, zal calculate() niet één frequentielijn returnen. In plaats daarvan wordt een dictionary gereturnd met als key de naam van het uitvoerpunt en als value het FrequencyLine resultaat object.\n\nprint(freq_lines[\"WS_1_30-4_dk_00006\"])\n\nFrequencyLine(level=array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2,\n       1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. , 2.1, 2.2, 2.3, 2.4, 2.5,\n       2.6, 2.7, 2.8, 2.9, 3. , 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8]), exceedance_frequency=array([3.59999446e+02, 2.11103636e+02, 6.37386524e+01, 1.48868762e+01,\n       3.91035647e+00, 1.47486378e+00, 6.43080232e-01, 3.03598564e-01,\n       1.36933737e-01, 6.66240482e-02, 3.15949196e-02, 1.51863801e-02,\n       7.50939395e-03, 3.67264045e-03, 1.82304738e-03, 9.40031439e-04,\n       5.08985734e-04, 2.68976473e-04, 1.46097359e-04, 8.15615499e-05,\n       4.62984519e-05, 2.61301581e-05, 1.53889918e-05, 8.80943678e-06,\n       5.17749562e-06, 3.00626056e-06, 1.87503263e-06, 1.16560449e-06,\n       7.17687221e-07, 4.39546539e-07, 2.90961345e-07, 1.80292060e-07,\n       1.20956989e-07, 8.01031566e-08, 5.11561637e-08, 3.30546245e-08,\n       2.19297425e-08, 1.48800474e-08, 9.97659224e-09]))\n\n\nEen overzicht van alle resultaten:\n\nplt.figure(figsize=[8, 5])\nplt.grid()\n\nfor _loc in freq_lines:\n    plt.plot(\n        1 / freq_lines[_loc].exceedance_frequency, freq_lines[_loc].level, label=_loc\n    )\n\nplt.legend(loc=\"upper left\")\nplt.title(\n    \"Overschrijdingsfrequentielijn significante golfhoogte zonder modelonzekerheid\"\n)\nplt.xscale(\"log\")\nplt.xticks([1, 10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(1, 100_000)\nplt.ylabel(\"Significante golfhoogte [m]\")\nplt.ylim(0, None)\nplt.show()",
    "crumbs": [
      "Overschrijdingsfrequentielijnen"
    ]
  },
  {
    "objectID": "examples/03.HBN.html",
    "href": "examples/03.HBN.html",
    "title": "Hydraulisch Belastingsniveau (HBN)",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\nimport pydra_core as pydra\n\n\nOpzet profiel en uitvoerpunt\n\nAls demonstratie worden HBNs voor de Borselle (Westerschelde/Kust) bepaald voor uitvoerpunt ‘WS_1_30-4_dk_00002’. Voor het traject geldt een norm van 1/1.000.000 per jaar vanwege de kerncentrale Borselle.\nEerst maken we een nieuwe profiel aan. We nemen een 1 op 3 talud met de kruinhoogte op NAP+10,75m en een dijknormaal van 225 graden. Hieronder is de code weergegeven. Voor meer informatie over het schematiseren van profielen zie notebook ‘02. Profielen.ipynb’.\n\n# Maak profiel\nprofile = pydra.Profile(\"Borselle\")\nprofile.set_dike_crest_level(10.75)\nprofile.set_dike_orientation(225)\nprofile.set_dike_geometry([-30, 30], [-10, 10])\n\n# Controle plot\nprofile.draw_profile()\n\n\n\n\n\n\n\n\nNu we het profiel geschematiseerd hebben, gaan we het uitvoerpunt initialiseren. Hieronder is de code weergegeven met enkele comments. Voor een uitgebreidere beschrijving van het opzetten van een uitvoerpunt zie notebook ‘01. Overschrijdingsfrequentielijnen.ipynb’.\n\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # future warnings are annoying\n\n# HRDatabase\nDB_PATH = \"data/WBI2017_Westerschelde_30-4_v03.sqlite\"\nhrdatabase = pydra.HRDatabase(DB_PATH)\n\n# Maak nieuw uitvoerpunt aan met standaard settings\nlocation = hrdatabase.get_location(\"WS_1_30-4_dk_00002\")\n# TODO: deze error beter afvangen:\n\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 146\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\n\n\n\nlocation.settings\n\ndatabase_path                  = data/WBI2017_Westerschelde_30-4_v03.sqlite\nlocation                       = WS_1_30-4_dk_00002\nm_max                          = 9.0\nm_step                         = 0.1\nmodel_uncertainty_water_level_steps = 7\nmodel_uncertainty_wave_height_steps = 5\nmodel_uncertainty_wave_period_steps = 5\nperiods_block_duration         = 360.0\nregion                         = 5.0\nsea                            = 11.0\nsea_level_probability_point1   = Zeewaterstand/Vlissingen/CondPovVlissingen_12u_zichtjaar2017_metOnzHeid.txt\nsea_level_probability_point2   = Zeewaterstand/Hansweert/CondPovHansweert_12u_zichtjaar2017_metOnzHeid.txt\nsea_level_probability_point3   = Zeewaterstand/Vlissingen virtueel/CondPovVlissingen-Additional_12u_zichtjaar2017_metOnzHeid.txt\nsea_level_rise                 = 0.0\nsigma_function                 = Sigmafunctie\\Westerschelde\\VS_sigmafunctie_WS_2017.txt\nu_max                          = 55.0\nu_repair                       = True\nu_step                         = 1.0\nwind_direction_probability     = Windrichting\\Westerschelde\\KansenWindrichting_WS_2017.txt\nwind_speed_probability         = Windsnelheid\\Vlissingen\\Ovkanswind_Vlissingen_2017_metOnzHeid.txt\nx_coordinate                   = 38672\ny_coordinate                   = 383394\n\n\nHierboven gebruiken we get_location(“WS_1_30-4_dk_00002”) om een uitvoerpunt aan te maken. Dit wijkt af van wat in notebook 01 is beschreven. In notebook 01 gebruiken we eerst settings = get_settings(“WS_1_30-4_dk_00002”) om een settings object te definieren en vervolgens location = create_location(settings) om een locatie aan te maken. Door het gebruik van location = get_location(“WS_1_30-4_dk_00002”) worden beide functies direct uitgevoerd. Dit geeft geen mogelijkheid om vooraf settings aan te passen.\nNu voegen we het eerder gedefinieerde profiel ‘profile’ toe aan ‘location’ door middel van de functie set_profile(Profile).\n\n# Voeg een profiel toe\nlocation.set_profile(profile)\n\n# Overschrijf profiel\n# location.set_profile(another_profile)\n\n# Verwijder profiel\n# location.remove_profile()\n\n\nlocation.get_profile()\n\n&lt;pydra_core.location.profile.profile.Profile at 0x2b49c877e00&gt;\n\n\nJe kan een profiel overschrijven door de set_profile(Profile) opnieuw te gebruiken. Je kan een profiel verwijderen door remove_profile() aan te roepen.\n\nHBNs berekenen\n\nOm HBNs te berekenen gebruiken we het HBN rekenobject. Het HBN rekenobject heeft vier optionele argumenten: \n\nq_overtopping (standaard 0.01 m3/m/s): Het kritische overslagdebiet.\n\n&lt;li&gt;levels (standaard None): Vooraf opgegeven hoogten. Indien deze None is berekent pydra de HBNs voor een kruinhoogte vanaf de 1% percentiel van de waterstand tot en met de 99% percentiel van de waterstand + 4x de 99% percentiel van de significante golfhoogte.&lt;/li&gt;\n&lt;li&gt;step_size (standaard 0.05): De stapgrootte van de stapjes waar pydra de HBN voor doorrekend.&lt;/li&gt;\n&lt;li&gt;model_uncertainty (standaard True): Wel of niet toepassen van modelonzekerheid.&lt;/li&gt;\n\n\n# Initieer het HBN rekenobject\nhbn = pydra.HBN(0.01)\nhbn.set_levels(np.arange(0.0, 15.0, 0.05))\n\nVervolgens kunnen we met het rekenobject hbn een overschrijdingsfrequentielijn bepalen voor HR uitvoerpunt ‘WS_1_30-4_dk_00002’ door de calculate() functie aan te roepen van het rekenobject en het location object als argument mee te geven.\n\nhbn_borselle = hbn.calculate(location)\n\n[14:43:49]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[14:43:49]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[14:43:49]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[14:43:49]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[14:43:49]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[14:43:49]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[14:43:50]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[14:43:50]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[14:43:50]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[14:43:50]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[14:43:50]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[14:43:50]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[14:43:50]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[14:43:50]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[14:43:50]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[14:43:50]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[14:43:50]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[14:43:50]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[14:43:50]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[14:43:50]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[14:43:50]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[14:43:50]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[14:43:50]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[14:43:50]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[14:43:50]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n\n\nDit geeft een overschrijdingsfrequentielijn hbn_borselle. Het is een object waarin de berekende gegevens (HBN en overschrijdingsfrequenties) worden opgeslagen. Als je het object print, zie je wat er allemaal in zit.\n\nprint(hbn_borselle)\n\nFrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999445e+02, 3.59999445e+02, 3.59999445e+02,\n       3.59999445e+02, 3.59999444e+02, 3.59999442e+02, 3.59999434e+02,\n       3.59752392e+02, 3.51664164e+02, 3.46088127e+02, 3.34377915e+02,\n       3.19950688e+02, 3.06504136e+02, 2.90526104e+02, 2.74871377e+02,\n       2.55523487e+02, 2.33817153e+02, 2.07473407e+02, 1.77847932e+02,\n       1.48968663e+02, 1.21200913e+02, 9.68802440e+01, 7.77659364e+01,\n       6.09690500e+01, 4.79358971e+01, 3.78243750e+01, 3.01168057e+01,\n       2.40684509e+01, 1.96659031e+01, 1.60772887e+01, 1.33871474e+01,\n       1.12609828e+01, 9.59250946e+00, 8.23765354e+00, 7.17852624e+00,\n       6.24987347e+00, 5.46221572e+00, 4.82237487e+00, 4.26520775e+00,\n       3.79985128e+00, 3.37369188e+00, 3.01697554e+00, 2.69934508e+00,\n       2.40843555e+00, 2.14896609e+00, 1.93576881e+00, 1.72988256e+00,\n       1.55506283e+00, 1.41207366e+00, 1.26202303e+00, 1.13965858e+00,\n       1.03642071e+00, 9.29447749e-01, 8.41604501e-01, 7.55442032e-01,\n       6.96951663e-01, 6.25620832e-01, 5.63252805e-01, 5.13961514e-01,\n       4.62540931e-01, 4.23396067e-01, 3.80801166e-01, 3.44978934e-01,\n       3.16376235e-01, 2.85296093e-01, 2.58003629e-01, 2.36446595e-01,\n       2.15151240e-01, 1.93985960e-01, 1.75752495e-01, 1.61721991e-01,\n       1.47618118e-01, 1.34166534e-01, 1.21274921e-01, 1.11630418e-01,\n       1.01363789e-01, 9.19646238e-02, 8.46892383e-02, 7.67003235e-02,\n       7.06566762e-02, 6.41126200e-02, 5.86009511e-02, 5.36632039e-02,\n       4.87492485e-02, 4.47273980e-02, 4.10530828e-02, 3.72843302e-02,\n       3.42020523e-02, 3.13192243e-02, 2.86945008e-02, 2.61124634e-02,\n       2.39962147e-02, 2.19981140e-02, 2.02015013e-02, 1.85248259e-02,\n       1.69293054e-02, 1.54972152e-02, 1.42772520e-02, 1.30455211e-02,\n       1.19598580e-02, 1.09522896e-02, 1.01399668e-02, 9.27876156e-03,\n       8.48523261e-03, 7.82164785e-03, 7.21890465e-03, 6.62196138e-03,\n       6.06388845e-03, 5.56399466e-03, 5.13433423e-03, 4.71336894e-03,\n       4.35795821e-03, 4.00440362e-03, 3.65821222e-03, 3.39895903e-03,\n       3.13357456e-03, 2.87780039e-03, 2.60359054e-03, 2.43042645e-03,\n       2.24421707e-03, 2.07408271e-03, 1.89432428e-03, 1.74481427e-03,\n       1.59585158e-03, 1.47244083e-03, 1.37056018e-03, 1.24798520e-03,\n       1.15769251e-03, 1.06131602e-03, 9.73843972e-04, 9.10250020e-04,\n       8.33073778e-04, 7.64273481e-04, 7.02907920e-04, 6.49054945e-04,\n       6.04398335e-04, 5.54984458e-04, 5.08439541e-04, 4.68405829e-04,\n       4.34290482e-04, 3.93459680e-04, 3.67099122e-04, 3.39408744e-04,\n       3.14349732e-04, 2.87712664e-04, 2.67106444e-04, 2.43799914e-04,\n       2.26441393e-04, 2.09465452e-04, 1.93414408e-04, 1.77952818e-04,\n       1.63915686e-04, 1.51772664e-04, 1.39316847e-04, 1.28790922e-04,\n       1.20114032e-04, 1.10633410e-04, 1.02584839e-04, 9.38261935e-05,\n       8.69173084e-05, 8.03378983e-05, 7.46163439e-05, 6.89339002e-05,\n       6.39985717e-05, 5.89537555e-05, 5.45883194e-05, 5.06359694e-05,\n       4.67372294e-05, 4.33065575e-05, 4.01997958e-05, 3.73716699e-05,\n       3.46944231e-05, 3.18318222e-05, 2.97578621e-05, 2.73790305e-05,\n       2.57014028e-05, 2.36891818e-05, 2.19239675e-05, 2.03479883e-05,\n       1.89814593e-05, 1.75141690e-05, 1.63434767e-05, 1.50289812e-05,\n       1.42320296e-05, 1.30847411e-05, 1.21300314e-05, 1.12416826e-05,\n       1.05156127e-05, 9.74657297e-06, 9.10559307e-06, 8.40362731e-06,\n       7.86271027e-06, 7.26635043e-06, 6.78332274e-06, 6.34223353e-06,\n       5.87820504e-06, 5.40485726e-06, 5.06020846e-06, 4.74905333e-06,\n       4.40867888e-06, 4.08642798e-06, 3.81328201e-06, 3.56455823e-06,\n       3.32879411e-06, 3.06705333e-06, 2.86815161e-06, 2.68198754e-06,\n       2.50179035e-06, 2.33293660e-06, 2.15963044e-06, 2.03528859e-06,\n       1.90195602e-06, 1.76068425e-06, 1.65067813e-06, 1.54858936e-06,\n       1.43963014e-06, 1.33975974e-06, 1.24958304e-06, 1.17600286e-06,\n       1.08930425e-06, 1.01703011e-06, 9.50763992e-07, 8.93940188e-07,\n       8.32335436e-07, 7.81958783e-07, 7.20491884e-07, 6.83962165e-07,\n       6.36508700e-07, 5.95511809e-07, 5.51186970e-07, 5.23623892e-07,\n       4.90354159e-07, 4.56476913e-07, 4.25606148e-07, 4.03792460e-07,\n       3.77186633e-07, 3.53530980e-07, 3.28959770e-07, 3.10441531e-07,\n       2.89826431e-07, 2.71062944e-07, 2.53543458e-07, 2.39814207e-07,\n       2.23027515e-07, 2.09494455e-07, 1.97784826e-07, 1.84825962e-07,\n       1.73329349e-07, 1.63409397e-07, 1.53079546e-07, 1.43248318e-07,\n       1.35471059e-07, 1.25715590e-07, 1.18268245e-07, 1.11639262e-07,\n       1.05034918e-07, 9.73472806e-08, 9.26671495e-08, 8.62810081e-08,\n       8.16858498e-08, 7.69365608e-08, 7.14464677e-08, 6.73441949e-08]))\n\n\nHieronder is een plot van de berekende overschrijdingsfrequentielijn gegeven.\n\nplt.figure(figsize=[8, 5])\nplt.grid()\nplt.plot(\n    1 / np.array(hbn_borselle.exceedance_frequency), hbn_borselle.level, label=\"Pydra\"\n)\nplt.legend(loc=\"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn HBN met q = 10 l/m/s (WS_1_30-4_dk_00002)\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 100_000)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(4, 12)\nplt.show()\n\n\n\n\n\n\n\n\nEn een vergelijking met Hydra-NL.\n\nhydranl_tt = np.array(\n    [10, 30, 100, 300, 1_000, 3_000, 10_000, 30_000, 100_000, 300_000, 1_000_000]\n)\nhydranl_hbn = np.array(\n    [5.582, 6.206, 6.904, 7.558, 8.282, 8.955, 9.71, 10.412, 11.207, 11.969, 12.831]\n)\n\nplt.figure(figsize=[8, 5])\nplt.grid()\nplt.plot(\n    1 / np.array(hbn_borselle.exceedance_frequency), hbn_borselle.level, label=\"Pydra\"\n)\nplt.plot(hydranl_tt, hydranl_hbn, \":\", label=\"Hydra-NL\")\nplt.legend(loc=\"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn HBN met q = 10 l/m/s (WS_1_30-4_dk_00002)\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 10_00_000)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(4, 13)\nplt.show()\n\n\n\n\n\n\n\n\n\nHBNs voor een heel traject\n\nZoals in notebook ‘01. Overschrijdingsfrequentielijnen’ uitgelegd, is het mogelijk om voor alle uitvoerpunten in een database een batch berekening uit te voeren. Voor het bepalen van HBN’s kan dit ook, in dit geval worden dan alle locaties waar nog geen profiel aan verbonden is overgeslagen. Voor meer informatie over batch berekeningen zie notebook ‘01. Overschrijdingsfrequentielijnen’.\n#| tags: [parameters]\n\nrun = False\n\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # future warnings are annoying\n# Voor de vorm voegen we ons eerder gedefinieerde profiel ook toe aan WS_1_30-4_dk_00001 en WS_1_30-4_dk_00003\ntmp_location = hrdatabase.get_location(\"WS_1_30-4_dk_00001\")\ntmp_location.set_profile(profile)\ntmp_location = hrdatabase.get_location(\"WS_1_30-4_dk_00003\")\ntmp_location.set_profile(profile)\n\n# Bereken de HBNs voor uitvoerpunten die een profiel hebben\nalle_hbns = hbn.calculate(hrdatabase)\n# TODO: deze error beter afvangen:\n\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 147\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 145\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 142\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\n[WARNING] Profile is not assiged to location 'WS_1_30-4_dk_00006'. Skipping this calculation.\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 143\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\n[WARNING] Profile is not assiged to location 'WS_2_30-4_dk_00005'. Skipping this calculation.\nERROR: Execution failed on sql '\n                    SELECT ucf.HRDLocationId, ucf.ClosingSituationId, hrv.ResultVariableId, ucf.HRDResultColumnId2, ucf.Correlation\n                    FROM UncertaintyCorrelationFactor ucf\n                    INNER JOIN HRDResultVariables hrv\n                    ON ucf.HRDResultColumnId = hrv.HRDResultColumnId\n                    WHERE ucf.HRDLocationId = 144\n                    ': no such table: UncertaintyCorrelationFactor, continuing without correlation\n[WARNING] Profile is not assiged to location 'WS_1_30-4_dk_00004'. Skipping this calculation.\n[14:43:51]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[14:43:51]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[14:43:51]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[14:43:51]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[14:43:51]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[14:43:51]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[14:43:51]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[14:43:51]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[14:43:51]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[14:43:51]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[14:43:52]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[14:43:52]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[14:43:52]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[14:43:52]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[14:43:52]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[14:43:52]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[14:43:52]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[14:43:52]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[14:43:52]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[14:43:52]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[14:43:52]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[14:43:52]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[14:43:52]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[14:43:52]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[14:43:52]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n[14:43:52]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[14:43:52]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[14:43:52]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[14:43:52]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[14:43:52]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[14:43:52]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[14:43:52]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[14:43:52]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[14:43:52]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[14:43:52]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[14:43:52]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[14:43:52]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[14:43:52]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[14:43:52]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[14:43:52]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[14:43:52]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[14:43:52]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[14:43:52]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[14:43:52]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[14:43:52]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[14:43:52]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[14:43:52]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[14:43:52]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[14:43:52]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[14:43:52]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n[14:43:53]: Model uncertainties 1/25 (fhs = 0.558; ftspec = 0.71; p = 0.002)\n[14:43:53]: Model uncertainties 2/25 (fhs = 0.558; ftspec = 0.835; p = 0.011)\n[14:43:53]: Model uncertainties 3/25 (fhs = 0.558; ftspec = 0.96; p = 0.019)\n[14:43:53]: Model uncertainties 4/25 (fhs = 0.558; ftspec = 1.085; p = 0.011)\n[14:43:53]: Model uncertainties 5/25 (fhs = 0.558; ftspec = 1.21; p = 0.002)\n[14:43:53]: Model uncertainties 6/25 (fhs = 0.774; ftspec = 0.71; p = 0.011)\n[14:43:53]: Model uncertainties 7/25 (fhs = 0.774; ftspec = 0.835; p = 0.058)\n[14:43:53]: Model uncertainties 8/25 (fhs = 0.774; ftspec = 0.96; p = 0.104)\n[14:43:53]: Model uncertainties 9/25 (fhs = 0.774; ftspec = 1.085; p = 0.058)\n[14:43:53]: Model uncertainties 10/25 (fhs = 0.774; ftspec = 1.21; p = 0.011)\n[14:43:53]: Model uncertainties 11/25 (fhs = 0.99; ftspec = 0.71; p = 0.019)\n[14:43:53]: Model uncertainties 12/25 (fhs = 0.99; ftspec = 0.835; p = 0.104)\n[14:43:53]: Model uncertainties 13/25 (fhs = 0.99; ftspec = 0.96; p = 0.185)\n[14:43:53]: Model uncertainties 14/25 (fhs = 0.99; ftspec = 1.085; p = 0.104)\n[14:43:53]: Model uncertainties 15/25 (fhs = 0.99; ftspec = 1.21; p = 0.019)\n[14:43:53]: Model uncertainties 16/25 (fhs = 1.206; ftspec = 0.71; p = 0.011)\n[14:43:53]: Model uncertainties 17/25 (fhs = 1.206; ftspec = 0.835; p = 0.058)\n[14:43:53]: Model uncertainties 18/25 (fhs = 1.206; ftspec = 0.96; p = 0.104)\n[14:43:53]: Model uncertainties 19/25 (fhs = 1.206; ftspec = 1.085; p = 0.058)\n[14:43:53]: Model uncertainties 20/25 (fhs = 1.206; ftspec = 1.21; p = 0.011)\n[14:43:53]: Model uncertainties 21/25 (fhs = 1.422; ftspec = 0.71; p = 0.002)\n[14:43:53]: Model uncertainties 22/25 (fhs = 1.422; ftspec = 0.835; p = 0.011)\n[14:43:53]: Model uncertainties 23/25 (fhs = 1.422; ftspec = 0.96; p = 0.019)\n[14:43:53]: Model uncertainties 24/25 (fhs = 1.422; ftspec = 1.085; p = 0.011)\n[14:43:53]: Model uncertainties 25/25 (fhs = 1.422; ftspec = 1.21; p = 0.002)\n\n\nOmdat we nu een heel traject doorrekenen, zal calculate() niet één frequentielijn returnen. In plaats daarvan wordt een dictionary gereturnd met als key de naam van het uitvoerpunt en als value het FrequencyLine resultaat object. Als er geen HBN berekent is, is de waarde in de dictionary None.\n\nprint(alle_hbns)\n\n{'WS_1_30-4_dk_00006': None, 'WS_2_30-4_dk_00005': None, 'WS_1_30-4_dk_00004': None, 'WS_1_30-4_dk_00003': FrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59888262e+02, 3.59581821e+02, 3.58125595e+02,\n       3.55823495e+02, 3.51968493e+02, 3.46141330e+02, 3.39014707e+02,\n       3.29249665e+02, 3.15577045e+02, 2.97888582e+02, 2.75848553e+02,\n       2.48742992e+02, 2.21800917e+02, 1.93716833e+02, 1.68823165e+02,\n       1.45236212e+02, 1.24006795e+02, 1.08118813e+02, 9.19802163e+01,\n       7.88305723e+01, 6.83340864e+01, 5.83558842e+01, 5.09995222e+01,\n       4.41748589e+01, 3.84810041e+01, 3.38125925e+01, 2.96248727e+01,\n       2.59415332e+01, 2.29860263e+01, 2.04154716e+01, 1.81967787e+01,\n       1.61943525e+01, 1.44917626e+01, 1.30607879e+01, 1.16817280e+01,\n       1.04941472e+01, 9.52359719e+00, 8.50666998e+00, 7.70741397e+00,\n       6.92102151e+00, 6.32746304e+00, 5.72285934e+00, 5.19451297e+00,\n       4.73010562e+00, 4.28586524e+00, 3.92149818e+00, 3.54882181e+00,\n       3.24097898e+00, 2.96053375e+00, 2.69089701e+00, 2.45124396e+00,\n       2.23913532e+00, 2.05085095e+00, 1.86619083e+00, 1.71260002e+00,\n       1.55822040e+00, 1.42222386e+00, 1.29866501e+00, 1.18222379e+00,\n       1.08440835e+00, 1.00044729e+00, 9.18848610e-01, 8.30111381e-01,\n       7.61168089e-01, 7.02801172e-01, 6.39336942e-01, 5.86057878e-01,\n       5.41697360e-01, 4.92439485e-01, 4.47299504e-01, 4.14400255e-01,\n       3.78021147e-01, 3.43787043e-01, 3.19556766e-01, 2.91046871e-01,\n       2.63994344e-01, 2.46284567e-01, 2.24808750e-01, 2.02963743e-01,\n       1.87681530e-01, 1.73243528e-01, 1.57337244e-01, 1.44324869e-01,\n       1.33001747e-01, 1.20658532e-01, 1.11245643e-01, 1.01916745e-01,\n       9.39556767e-02, 8.58494472e-02, 7.83008331e-02, 7.25940588e-02,\n       6.58035169e-02, 6.04469634e-02, 5.58532479e-02, 5.10788079e-02,\n       4.68247028e-02, 4.31880120e-02, 3.90349425e-02, 3.58256877e-02,\n       3.29844272e-02, 3.02317561e-02, 2.74523676e-02, 2.53900099e-02,\n       2.31795395e-02, 2.14022859e-02, 1.93830615e-02, 1.78058329e-02,\n       1.64163999e-02, 1.50913815e-02, 1.37818087e-02, 1.24921549e-02,\n       1.15596027e-02, 1.05488557e-02, 9.63834084e-03, 8.83564961e-03,\n       8.13732438e-03, 7.46451152e-03, 6.84355827e-03, 6.24305820e-03,\n       5.76324830e-03, 5.28877277e-03, 4.83787705e-03, 4.44068259e-03,\n       4.05080151e-03, 3.74282578e-03, 3.43843562e-03, 3.13707643e-03,\n       2.87408604e-03, 2.63810974e-03, 2.42818895e-03, 2.24163058e-03,\n       2.05397248e-03, 1.87519439e-03, 1.73160722e-03, 1.59260428e-03,\n       1.45028014e-03, 1.35329780e-03, 1.22828949e-03, 1.12896129e-03,\n       1.04117683e-03, 9.57647940e-04, 8.78737873e-04, 8.08224336e-04,\n       7.38098799e-04, 6.80490629e-04, 6.31642465e-04, 5.69866104e-04,\n       5.24660584e-04, 4.86061263e-04, 4.46940590e-04, 4.10835346e-04,\n       3.76276645e-04, 3.47156785e-04, 3.20619169e-04, 2.94105069e-04,\n       2.70627491e-04, 2.49380238e-04, 2.29980892e-04, 2.12028363e-04,\n       1.95927282e-04, 1.80677802e-04, 1.66840038e-04, 1.53542887e-04,\n       1.41027517e-04, 1.29425843e-04, 1.19556009e-04, 1.09662312e-04,\n       1.00574340e-04, 9.35864311e-05, 8.60762754e-05, 8.00541394e-05,\n       7.29894849e-05, 6.86288399e-05, 6.24957409e-05, 5.74161037e-05,\n       5.35610103e-05, 4.90449961e-05, 4.53016531e-05, 4.19049707e-05,\n       3.85133279e-05, 3.60511982e-05, 3.29633545e-05, 3.03656567e-05,\n       2.80867265e-05, 2.61052726e-05, 2.40987087e-05, 2.23571490e-05,\n       2.05368473e-05, 1.90569490e-05, 1.75849074e-05, 1.62593262e-05,\n       1.50872932e-05, 1.39501504e-05, 1.30396318e-05, 1.18889054e-05,\n       1.10939604e-05, 1.02334791e-05, 9.52663503e-06, 8.77951730e-06,\n       8.13579920e-06, 7.51019491e-06, 6.97181040e-06, 6.45397763e-06,\n       6.03120607e-06, 5.52217174e-06, 5.23550935e-06, 4.81341738e-06,\n       4.52588996e-06, 4.13427328e-06, 3.89317054e-06, 3.55668906e-06,\n       3.31281693e-06, 3.07725865e-06, 2.87880626e-06, 2.63841215e-06,\n       2.46063024e-06, 2.28426107e-06, 2.14580407e-06, 1.99447036e-06,\n       1.84610181e-06, 1.72488555e-06, 1.60209549e-06, 1.47445593e-06,\n       1.39090904e-06, 1.29340203e-06, 1.20477102e-06, 1.12574363e-06,\n       1.04567522e-06, 9.72732164e-07, 9.10672415e-07, 8.46692713e-07,\n       7.94326022e-07, 7.43544372e-07, 6.83791390e-07, 6.41407776e-07,\n       5.95347140e-07, 5.64045794e-07, 5.19610077e-07, 4.92268992e-07,\n       4.56474094e-07, 4.24050422e-07, 3.96656753e-07, 3.68002710e-07,\n       3.49102591e-07, 3.23991034e-07, 3.04003139e-07, 2.82267115e-07,\n       2.67849248e-07, 2.47139844e-07, 2.34212677e-07, 2.16621549e-07,\n       2.04826730e-07, 1.90240456e-07, 1.80632154e-07, 1.67513461e-07])), 'WS_1_30-4_dk_00002': FrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999445e+02, 3.59999445e+02, 3.59999445e+02,\n       3.59999445e+02, 3.59999444e+02, 3.59999442e+02, 3.59999434e+02,\n       3.59752392e+02, 3.51664164e+02, 3.46088127e+02, 3.34377915e+02,\n       3.19950688e+02, 3.06504136e+02, 2.90526104e+02, 2.74871377e+02,\n       2.55523487e+02, 2.33817153e+02, 2.07473407e+02, 1.77847932e+02,\n       1.48968663e+02, 1.21200913e+02, 9.68802440e+01, 7.77659364e+01,\n       6.09690500e+01, 4.79358971e+01, 3.78243750e+01, 3.01168057e+01,\n       2.40684509e+01, 1.96659031e+01, 1.60772887e+01, 1.33871474e+01,\n       1.12609828e+01, 9.59250946e+00, 8.23765354e+00, 7.17852624e+00,\n       6.24987347e+00, 5.46221572e+00, 4.82237487e+00, 4.26520775e+00,\n       3.79985128e+00, 3.37369188e+00, 3.01697554e+00, 2.69934508e+00,\n       2.40843555e+00, 2.14896609e+00, 1.93576881e+00, 1.72988256e+00,\n       1.55506283e+00, 1.41207366e+00, 1.26202303e+00, 1.13965858e+00,\n       1.03642071e+00, 9.29447749e-01, 8.41604501e-01, 7.55442032e-01,\n       6.96951663e-01, 6.25620832e-01, 5.63252805e-01, 5.13961514e-01,\n       4.62540931e-01, 4.23396067e-01, 3.80801166e-01, 3.44978934e-01,\n       3.16376235e-01, 2.85296093e-01, 2.58003629e-01, 2.36446595e-01,\n       2.15151240e-01, 1.93985960e-01, 1.75752495e-01, 1.61721991e-01,\n       1.47618118e-01, 1.34166534e-01, 1.21274921e-01, 1.11630418e-01,\n       1.01363789e-01, 9.19646238e-02, 8.46892383e-02, 7.67003235e-02,\n       7.06566762e-02, 6.41126200e-02, 5.86009511e-02, 5.36632039e-02,\n       4.87492485e-02, 4.47273980e-02, 4.10530828e-02, 3.72843302e-02,\n       3.42020523e-02, 3.13192243e-02, 2.86945008e-02, 2.61124634e-02,\n       2.39962147e-02, 2.19981140e-02, 2.02015013e-02, 1.85248259e-02,\n       1.69293054e-02, 1.54972152e-02, 1.42772520e-02, 1.30455211e-02,\n       1.19598580e-02, 1.09522896e-02, 1.01399668e-02, 9.27876156e-03,\n       8.48523261e-03, 7.82164785e-03, 7.21890465e-03, 6.62196138e-03,\n       6.06388845e-03, 5.56399466e-03, 5.13433423e-03, 4.71336894e-03,\n       4.35795821e-03, 4.00440362e-03, 3.65821222e-03, 3.39895903e-03,\n       3.13357456e-03, 2.87780039e-03, 2.60359054e-03, 2.43042645e-03,\n       2.24421707e-03, 2.07408271e-03, 1.89432428e-03, 1.74481427e-03,\n       1.59585158e-03, 1.47244083e-03, 1.37056018e-03, 1.24798520e-03,\n       1.15769251e-03, 1.06131602e-03, 9.73843972e-04, 9.10250020e-04,\n       8.33073778e-04, 7.64273481e-04, 7.02907920e-04, 6.49054945e-04,\n       6.04398335e-04, 5.54984458e-04, 5.08439541e-04, 4.68405829e-04,\n       4.34290482e-04, 3.93459680e-04, 3.67099122e-04, 3.39408744e-04,\n       3.14349732e-04, 2.87712664e-04, 2.67106444e-04, 2.43799914e-04,\n       2.26441393e-04, 2.09465452e-04, 1.93414408e-04, 1.77952818e-04,\n       1.63915686e-04, 1.51772664e-04, 1.39316847e-04, 1.28790922e-04,\n       1.20114032e-04, 1.10633410e-04, 1.02584839e-04, 9.38261935e-05,\n       8.69173084e-05, 8.03378983e-05, 7.46163439e-05, 6.89339002e-05,\n       6.39985717e-05, 5.89537555e-05, 5.45883194e-05, 5.06359694e-05,\n       4.67372294e-05, 4.33065575e-05, 4.01997958e-05, 3.73716699e-05,\n       3.46944231e-05, 3.18318222e-05, 2.97578621e-05, 2.73790305e-05,\n       2.57014028e-05, 2.36891818e-05, 2.19239675e-05, 2.03479883e-05,\n       1.89814593e-05, 1.75141690e-05, 1.63434767e-05, 1.50289812e-05,\n       1.42320296e-05, 1.30847411e-05, 1.21300314e-05, 1.12416826e-05,\n       1.05156127e-05, 9.74657297e-06, 9.10559307e-06, 8.40362731e-06,\n       7.86271027e-06, 7.26635043e-06, 6.78332274e-06, 6.34223353e-06,\n       5.87820504e-06, 5.40485726e-06, 5.06020846e-06, 4.74905333e-06,\n       4.40867888e-06, 4.08642798e-06, 3.81328201e-06, 3.56455823e-06,\n       3.32879411e-06, 3.06705333e-06, 2.86815161e-06, 2.68198754e-06,\n       2.50179035e-06, 2.33293660e-06, 2.15963044e-06, 2.03528859e-06,\n       1.90195602e-06, 1.76068425e-06, 1.65067813e-06, 1.54858936e-06,\n       1.43963014e-06, 1.33975974e-06, 1.24958304e-06, 1.17600286e-06,\n       1.08930425e-06, 1.01703011e-06, 9.50763992e-07, 8.93940188e-07,\n       8.32335436e-07, 7.81958783e-07, 7.20491884e-07, 6.83962165e-07,\n       6.36508700e-07, 5.95511809e-07, 5.51186970e-07, 5.23623892e-07,\n       4.90354159e-07, 4.56476913e-07, 4.25606148e-07, 4.03792460e-07,\n       3.77186633e-07, 3.53530980e-07, 3.28959770e-07, 3.10441531e-07,\n       2.89826431e-07, 2.71062944e-07, 2.53543458e-07, 2.39814207e-07,\n       2.23027515e-07, 2.09494455e-07, 1.97784826e-07, 1.84825962e-07,\n       1.73329349e-07, 1.63409397e-07, 1.53079546e-07, 1.43248318e-07,\n       1.35471059e-07, 1.25715590e-07, 1.18268245e-07, 1.11639262e-07,\n       1.05034918e-07, 9.73472806e-08, 9.26671495e-08, 8.62810081e-08,\n       8.16858498e-08, 7.69365608e-08, 7.14464677e-08, 6.73441949e-08])), 'WS_1_30-4_dk_00001': FrequencyLine(level=array([ 0.  ,  0.05,  0.1 ,  0.15,  0.2 ,  0.25,  0.3 ,  0.35,  0.4 ,\n        0.45,  0.5 ,  0.55,  0.6 ,  0.65,  0.7 ,  0.75,  0.8 ,  0.85,\n        0.9 ,  0.95,  1.  ,  1.05,  1.1 ,  1.15,  1.2 ,  1.25,  1.3 ,\n        1.35,  1.4 ,  1.45,  1.5 ,  1.55,  1.6 ,  1.65,  1.7 ,  1.75,\n        1.8 ,  1.85,  1.9 ,  1.95,  2.  ,  2.05,  2.1 ,  2.15,  2.2 ,\n        2.25,  2.3 ,  2.35,  2.4 ,  2.45,  2.5 ,  2.55,  2.6 ,  2.65,\n        2.7 ,  2.75,  2.8 ,  2.85,  2.9 ,  2.95,  3.  ,  3.05,  3.1 ,\n        3.15,  3.2 ,  3.25,  3.3 ,  3.35,  3.4 ,  3.45,  3.5 ,  3.55,\n        3.6 ,  3.65,  3.7 ,  3.75,  3.8 ,  3.85,  3.9 ,  3.95,  4.  ,\n        4.05,  4.1 ,  4.15,  4.2 ,  4.25,  4.3 ,  4.35,  4.4 ,  4.45,\n        4.5 ,  4.55,  4.6 ,  4.65,  4.7 ,  4.75,  4.8 ,  4.85,  4.9 ,\n        4.95,  5.  ,  5.05,  5.1 ,  5.15,  5.2 ,  5.25,  5.3 ,  5.35,\n        5.4 ,  5.45,  5.5 ,  5.55,  5.6 ,  5.65,  5.7 ,  5.75,  5.8 ,\n        5.85,  5.9 ,  5.95,  6.  ,  6.05,  6.1 ,  6.15,  6.2 ,  6.25,\n        6.3 ,  6.35,  6.4 ,  6.45,  6.5 ,  6.55,  6.6 ,  6.65,  6.7 ,\n        6.75,  6.8 ,  6.85,  6.9 ,  6.95,  7.  ,  7.05,  7.1 ,  7.15,\n        7.2 ,  7.25,  7.3 ,  7.35,  7.4 ,  7.45,  7.5 ,  7.55,  7.6 ,\n        7.65,  7.7 ,  7.75,  7.8 ,  7.85,  7.9 ,  7.95,  8.  ,  8.05,\n        8.1 ,  8.15,  8.2 ,  8.25,  8.3 ,  8.35,  8.4 ,  8.45,  8.5 ,\n        8.55,  8.6 ,  8.65,  8.7 ,  8.75,  8.8 ,  8.85,  8.9 ,  8.95,\n        9.  ,  9.05,  9.1 ,  9.15,  9.2 ,  9.25,  9.3 ,  9.35,  9.4 ,\n        9.45,  9.5 ,  9.55,  9.6 ,  9.65,  9.7 ,  9.75,  9.8 ,  9.85,\n        9.9 ,  9.95, 10.  , 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 ,\n       10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75,\n       10.8 , 10.85, 10.9 , 10.95, 11.  , 11.05, 11.1 , 11.15, 11.2 ,\n       11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65,\n       11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12.  , 12.05, 12.1 ,\n       12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55,\n       12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13.  ,\n       13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45,\n       13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 ,\n       13.95, 14.  , 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35,\n       14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 ,\n       14.85, 14.9 , 14.95]), exceedance_frequency=array([3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999446e+02, 3.59999446e+02,\n       3.59999446e+02, 3.59999446e+02, 3.59999444e+02, 3.59999443e+02,\n       3.59999435e+02, 3.59999247e+02, 3.59998647e+02, 3.59997633e+02,\n       3.59995367e+02, 3.59989875e+02, 3.59982506e+02, 3.59965592e+02,\n       3.59948840e+02, 3.59905881e+02, 3.59829836e+02, 3.59696101e+02,\n       3.59470291e+02, 3.59030516e+02, 3.58336536e+02, 3.57301556e+02,\n       3.55593997e+02, 3.52684298e+02, 3.48750972e+02, 3.42638936e+02,\n       3.33739324e+02, 3.22236205e+02, 3.09266669e+02, 2.89007897e+02,\n       2.70568371e+02, 2.54514433e+02, 2.29806701e+02, 2.19396569e+02,\n       2.02092233e+02, 1.88364404e+02, 1.79281631e+02, 1.46817022e+02,\n       1.30635378e+02, 9.36159705e+01, 6.98882292e+01, 5.02910908e+01,\n       3.14970094e+01, 2.25089185e+01, 1.46597182e+01, 1.07062588e+01,\n       7.85675915e+00, 6.03615099e+00, 4.97323467e+00, 4.21737586e+00,\n       3.39114994e+00, 3.00426373e+00, 2.62884689e+00, 2.20726636e+00,\n       1.95738676e+00, 1.72606172e+00, 1.49588384e+00, 1.31573068e+00,\n       1.15647728e+00, 1.02338887e+00, 8.97699516e-01, 7.96408626e-01,\n       7.05727095e-01, 6.24796499e-01, 5.51639712e-01, 4.91324130e-01,\n       4.35421985e-01, 3.87282904e-01, 3.45406238e-01, 3.08831019e-01,\n       2.71406907e-01, 2.44853300e-01, 2.18834279e-01, 1.94725407e-01,\n       1.75124345e-01, 1.56994859e-01, 1.39971539e-01, 1.26598153e-01,\n       1.13061362e-01, 1.00313013e-01, 9.09179023e-02, 8.19765234e-02,\n       7.28201107e-02, 6.55515232e-02, 5.98566067e-02, 5.38974363e-02,\n       4.74401382e-02, 4.30087923e-02, 3.93682363e-02, 3.54648478e-02,\n       3.18272935e-02, 2.87035263e-02, 2.62275829e-02, 2.36095400e-02,\n       2.11504604e-02, 1.92970607e-02, 1.74444903e-02, 1.57997035e-02,\n       1.42132718e-02, 1.29397444e-02, 1.17594697e-02, 1.07028050e-02,\n       9.63626463e-03, 8.73478510e-03, 7.93486088e-03, 7.22907754e-03,\n       6.53909543e-03, 5.86289806e-03, 5.35331366e-03, 4.90482085e-03,\n       4.41414035e-03, 4.00569963e-03, 3.66685835e-03, 3.34173407e-03,\n       3.02157706e-03, 2.77139690e-03, 2.49527298e-03, 2.27253671e-03,\n       2.07405773e-03, 1.89975078e-03, 1.70319252e-03, 1.57094844e-03,\n       1.43309725e-03, 1.29471922e-03, 1.17547194e-03, 1.07855471e-03,\n       9.84648764e-04, 8.98762633e-04, 8.14435123e-04, 7.55516185e-04,\n       6.84825252e-04, 6.16407888e-04, 5.69564665e-04, 5.20698829e-04,\n       4.73880959e-04, 4.32398217e-04, 3.96274567e-04, 3.63722266e-04,\n       3.32435436e-04, 3.03955739e-04, 2.77749926e-04, 2.53726524e-04,\n       2.32059729e-04, 2.13463448e-04, 1.94304244e-04, 1.77888411e-04,\n       1.64230374e-04, 1.51247883e-04, 1.37739061e-04, 1.25476823e-04,\n       1.16304531e-04, 1.05840090e-04, 9.73944204e-05, 8.88792672e-05,\n       8.24567995e-05, 7.61397492e-05, 6.96219232e-05, 6.35037942e-05,\n       5.87379079e-05, 5.43335679e-05, 5.02194256e-05, 4.56849844e-05,\n       4.22363329e-05, 3.88186176e-05, 3.59369423e-05, 3.31027721e-05,\n       3.04341271e-05, 2.80443161e-05, 2.58757780e-05, 2.42462580e-05,\n       2.19501340e-05, 2.02576948e-05, 1.86796780e-05, 1.76377208e-05,\n       1.59584801e-05, 1.45322338e-05, 1.35821649e-05, 1.26501290e-05,\n       1.15705791e-05, 1.05964311e-05, 1.00104998e-05, 9.19498335e-06,\n       8.42604706e-06, 7.74502872e-06, 7.29670628e-06, 6.68285608e-06,\n       6.06631153e-06, 5.68471202e-06, 5.38174629e-06, 4.96150006e-06,\n       4.40786796e-06, 4.13942827e-06, 3.94273146e-06, 3.69097143e-06,\n       3.28380405e-06, 3.00157839e-06, 2.86450332e-06, 2.71894714e-06,\n       2.43522028e-06, 2.23348237e-06, 2.10079015e-06, 1.98689890e-06,\n       1.81066781e-06, 1.65887294e-06, 1.55437409e-06, 1.44693327e-06,\n       1.33853837e-06, 1.22498230e-06, 1.15503968e-06, 1.06769218e-06,\n       9.82226212e-07, 9.02324341e-07, 8.61034911e-07, 8.00232901e-07,\n       7.34807346e-07, 6.64731185e-07, 6.30015957e-07, 5.88262237e-07,\n       5.53165324e-07, 4.95380516e-07, 4.66174673e-07, 4.33354237e-07,\n       4.07135955e-07, 3.73818661e-07, 3.43093206e-07, 3.21164052e-07,\n       3.01154934e-07, 2.79607737e-07, 2.58785457e-07, 2.37746512e-07,\n       2.24074286e-07, 2.08534452e-07, 1.92707956e-07, 1.77166161e-07,\n       1.66070968e-07, 1.55984413e-07, 1.42662262e-07, 1.32121739e-07,\n       1.23950352e-07, 1.15231122e-07, 1.06014001e-07, 9.83195231e-08,\n       9.16763070e-08, 8.54164495e-08, 7.95716725e-08, 7.30949775e-08,\n       6.83999016e-08, 6.32663574e-08, 5.86932796e-08, 5.40355363e-08,\n       5.08169358e-08, 4.69286796e-08, 4.36662201e-08, 4.02685205e-08,\n       3.75854672e-08, 3.45954486e-08, 3.21261298e-08, 2.99335719e-08,\n       2.76210958e-08, 2.57590276e-08, 2.37743626e-08, 2.19566646e-08,\n       2.03779393e-08, 1.91004485e-08, 1.76288500e-08, 1.61289740e-08,\n       1.51303355e-08, 1.39899979e-08, 1.28398237e-08, 1.18108433e-08,\n       1.09313495e-08, 1.00986360e-08, 9.47735594e-09, 8.67012459e-09,\n       8.04143051e-09, 7.44047659e-09, 6.75043608e-09, 6.26762166e-09,\n       5.81856303e-09, 5.33353139e-09, 4.91423659e-09, 4.47560427e-09,\n       4.13220892e-09, 3.79979348e-09, 3.53743064e-09, 3.20979621e-09]))}\n\n\nEen overzicht van alle resultaten:\n\nplt.figure(figsize=[8, 5])\nplt.grid()\n\nfor _loc in alle_hbns:\n    if alle_hbns[_loc] is not None:\n        plt.plot(\n            1 / alle_hbns[_loc].exceedance_frequency, alle_hbns[_loc].level, label=_loc\n        )\n\nplt.legend(loc=\"upper left\")\nplt.title(\"Overschrijdingsfrequentielijn HBN met q = 10 l/m/s\")\nplt.xscale(\"log\")\nplt.xticks([10, 100, 1_000, 10_000, 100_000])\nplt.xlabel(\"Terugkeertijd [jaar]\")\nplt.xlim(10, 10_00_000)\nplt.ylabel(\"Kruinhoogte [NAP+m]\")\nplt.ylim(4, 13)\nplt.show()",
    "crumbs": [
      "Hydraulisch Belastingsniveau (HBN)"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Pydra core",
    "section": "",
    "text": "This is a stable version of the Pydra, containing the core functionality of the Pydra package. Pydra was started as an experimental Python version of Hydra-NL Pydra is developed by HKV together with Rijkswaterstaat and Deltares and is published under de GNU GPL-3 license."
  },
  {
    "objectID": "reference/ExceedanceFrequencyLine.html",
    "href": "reference/ExceedanceFrequencyLine.html",
    "title": "ExceedanceFrequencyLine",
    "section": "",
    "text": "ExceedanceFrequencyLine(\n    self,\n    result_variable,\n    model_uncertainty=True,\n    levels=None,\n    step_size=0.1,\n)\nCalculate a frequency line for a result variable (e.g. h (waterlevel), hs (significant wave height)) for a location\n\n\n\n\n\nName\nDescription\n\n\n\n\nmodel_uncertainty_steps\n\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\ncalculate\nExecute a calculation\n\n\ncalculate_location\nCalculate the exceedance probability of the variable at a given set of levels.\n\n\nset_levels\nChange the levels.\n\n\nset_model_uncertainty_steps\nSet the number of model uncertainty steps\n\n\nset_result_variable\nChange the result variable for which the frequency line will be calculated.\n\n\nset_step_size\nChange the step size of the frequency line.\n\n\nuse_model_uncertainty\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\nExceedanceFrequencyLine.calculate(input)\nExecute a calculation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninput\nUnion[Location, HRDatabase]\nThe input\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.calculate_location(location)\nCalculate the exceedance probability of the variable at a given set of levels. If the levels are not specified, they will be chosen at the 1st and 99th percentile of all values in the database.\n\n\nlocation : Location The Location object\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nFrequencyLine\nFrequency line of the result variable\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_levels(levels=None)\nChange the levels. If levels is not defined, the frequency line is calculated based upon the 1st and 99th percentile.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nlevels\nlist\nThe levels at which the exceedance probability has to be calculated\nNone\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_model_uncertainty_steps(model_uncertainty_steps)\nSet the number of model uncertainty steps\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty_steps\nint\nNumber of model uncertainty steps\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_result_variable(result_variable)\nChange the result variable for which the frequency line will be calculated.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nresult_variable\nstr\nThe result variable for which the frequency line will be calculated\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_step_size(step_size)\nChange the step size of the frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstep_size\nfloat\nThe step size of the frequency line\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.use_model_uncertainty(model_uncertainty)\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty\nbool\nEnable or disable the use of model uncertainties\nrequired"
  },
  {
    "objectID": "reference/ExceedanceFrequencyLine.html#attributes",
    "href": "reference/ExceedanceFrequencyLine.html#attributes",
    "title": "ExceedanceFrequencyLine",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nmodel_uncertainty_steps"
  },
  {
    "objectID": "reference/ExceedanceFrequencyLine.html#methods",
    "href": "reference/ExceedanceFrequencyLine.html#methods",
    "title": "ExceedanceFrequencyLine",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncalculate\nExecute a calculation\n\n\ncalculate_location\nCalculate the exceedance probability of the variable at a given set of levels.\n\n\nset_levels\nChange the levels.\n\n\nset_model_uncertainty_steps\nSet the number of model uncertainty steps\n\n\nset_result_variable\nChange the result variable for which the frequency line will be calculated.\n\n\nset_step_size\nChange the step size of the frequency line.\n\n\nuse_model_uncertainty\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\nExceedanceFrequencyLine.calculate(input)\nExecute a calculation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninput\nUnion[Location, HRDatabase]\nThe input\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.calculate_location(location)\nCalculate the exceedance probability of the variable at a given set of levels. If the levels are not specified, they will be chosen at the 1st and 99th percentile of all values in the database.\n\n\nlocation : Location The Location object\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nFrequencyLine\nFrequency line of the result variable\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_levels(levels=None)\nChange the levels. If levels is not defined, the frequency line is calculated based upon the 1st and 99th percentile.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nlevels\nlist\nThe levels at which the exceedance probability has to be calculated\nNone\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_model_uncertainty_steps(model_uncertainty_steps)\nSet the number of model uncertainty steps\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty_steps\nint\nNumber of model uncertainty steps\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_result_variable(result_variable)\nChange the result variable for which the frequency line will be calculated.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nresult_variable\nstr\nThe result variable for which the frequency line will be calculated\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.set_step_size(step_size)\nChange the step size of the frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstep_size\nfloat\nThe step size of the frequency line\nrequired\n\n\n\n\n\n\n\nExceedanceFrequencyLine.use_model_uncertainty(model_uncertainty)\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty\nbool\nEnable or disable the use of model uncertainties\nrequired"
  },
  {
    "objectID": "reference/HBN.html",
    "href": "reference/HBN.html",
    "title": "HBN",
    "section": "",
    "text": "HBN(\n    self,\n    q_overtopping=0.01,\n    levels=None,\n    step_size=0.1,\n    model_uncertainty=True,\n)\nCalculate the HBN for a location\n\n\n\n\n\nName\nDescription\n\n\n\n\ncalculate\nExecute a calculation\n\n\ncalculate_location\nCalculate the exceedance probability of the variable at a given set of levels.\n\n\nset_critical_overtopping\nChange the critical overtopping\n\n\nset_levels\nChange the levels.\n\n\nset_step_size\nChange the step size of the frequency line.\n\n\nuse_model_uncertainty\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\nHBN.calculate(input)\nExecute a calculation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninput\nUnion[Location, HRDatabase]\nThe input\nrequired\n\n\n\n\n\n\n\nHBN.calculate_location(location)\nCalculate the exceedance probability of the variable at a given set of levels. If the levels are not specified, they will be chosen at the 1st and 99th percentile of all values in the database.\n\n\nlocation : Location The Location object\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nFrequencyLine\nFrequency line of the crest level\n\n\n\n\n\n\n\nHBN.set_critical_overtopping(q_overtopping)\nChange the critical overtopping\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nq_overtopping\nfloat\nThe critical overtopping [m3/m/s]\nrequired\n\n\n\n\n\n\n\nHBN.set_levels(levels=None)\nChange the levels. If levels is not defined, the frequency line is calculated based upon the 1st and 99th percentile.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nlevels\nlist\nThe levels at which the exceedance probability has to be calculated\nNone\n\n\n\n\n\n\n\nHBN.set_step_size(step_size)\nChange the step size of the frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstep_size\nfloat\nThe step size of the frequency line\nrequired\n\n\n\n\n\n\n\nHBN.use_model_uncertainty(model_uncertainty)\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty\nbool\nEnable or disable the use of model uncertainties\nrequired"
  },
  {
    "objectID": "reference/HBN.html#methods",
    "href": "reference/HBN.html#methods",
    "title": "HBN",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncalculate\nExecute a calculation\n\n\ncalculate_location\nCalculate the exceedance probability of the variable at a given set of levels.\n\n\nset_critical_overtopping\nChange the critical overtopping\n\n\nset_levels\nChange the levels.\n\n\nset_step_size\nChange the step size of the frequency line.\n\n\nuse_model_uncertainty\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\nHBN.calculate(input)\nExecute a calculation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninput\nUnion[Location, HRDatabase]\nThe input\nrequired\n\n\n\n\n\n\n\nHBN.calculate_location(location)\nCalculate the exceedance probability of the variable at a given set of levels. If the levels are not specified, they will be chosen at the 1st and 99th percentile of all values in the database.\n\n\nlocation : Location The Location object\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nFrequencyLine\nFrequency line of the crest level\n\n\n\n\n\n\n\nHBN.set_critical_overtopping(q_overtopping)\nChange the critical overtopping\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nq_overtopping\nfloat\nThe critical overtopping [m3/m/s]\nrequired\n\n\n\n\n\n\n\nHBN.set_levels(levels=None)\nChange the levels. If levels is not defined, the frequency line is calculated based upon the 1st and 99th percentile.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nlevels\nlist\nThe levels at which the exceedance probability has to be calculated\nNone\n\n\n\n\n\n\n\nHBN.set_step_size(step_size)\nChange the step size of the frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstep_size\nfloat\nThe step size of the frequency line\nrequired\n\n\n\n\n\n\n\nHBN.use_model_uncertainty(model_uncertainty)\nUse model uncertainty when calculating a frequency line.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmodel_uncertainty\nbool\nEnable or disable the use of model uncertainties\nrequired"
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "API Reference",
    "section": "",
    "text": "ExceedanceFrequencyLine\nCalculate a frequency line for a result variable (e.g. h (waterlevel), hs (significant wave height)) for a location\n\n\nExceedanceFrequencyLineExperimental\nCalculate a frequency line for a result variable (e.g. h (waterlevel), hs (significant wave height)) for a location\n\n\nHBN\nCalculate the HBN for a location\n\n\nBreakwater\nBreakwater classes for profiles.\n\n\nWaterSystem\nA class representing different water systems in the Netherlands.\n\n\nHRDatabase\nHRDatabase class\n\n\nLocation\nThis is a class for one HRDLocation. This class contains the Settings,\n\n\nProfile\nProfile class"
  },
  {
    "objectID": "reference/index.html#pydra_core",
    "href": "reference/index.html#pydra_core",
    "title": "API Reference",
    "section": "",
    "text": "ExceedanceFrequencyLine\nCalculate a frequency line for a result variable (e.g. h (waterlevel), hs (significant wave height)) for a location\n\n\nExceedanceFrequencyLineExperimental\nCalculate a frequency line for a result variable (e.g. h (waterlevel), hs (significant wave height)) for a location\n\n\nHBN\nCalculate the HBN for a location\n\n\nBreakwater\nBreakwater classes for profiles.\n\n\nWaterSystem\nA class representing different water systems in the Netherlands.\n\n\nHRDatabase\nHRDatabase class\n\n\nLocation\nThis is a class for one HRDLocation. This class contains the Settings,\n\n\nProfile\nProfile class"
  },
  {
    "objectID": "reference/Profile.html",
    "href": "reference/Profile.html",
    "title": "Profile",
    "section": "",
    "text": "Profile(self, profile_name='Profile')\nProfile class\nTODO: Implement support for sheet piles\n\n\n\n\n\nName\nDescription\n\n\n\n\nbreakwater_level\nConvert a string or number to a floating-point number, if possible.\n\n\nbreakwater_type\nBreakwater classes for profiles.\n\n\ndike_crest_level\nThe type of the None singleton.\n\n\ndike_orientation\nThe type of the None singleton.\n\n\ndike_roughness\nThe type of the None singleton.\n\n\ndike_x_coordinates\nThe type of the None singleton.\n\n\ndike_y_coordinates\nThe type of the None singleton.\n\n\nforeland_x_coordinates\nThe type of the None singleton.\n\n\nforeland_y_coordinates\nThe type of the None singleton.\n\n\nprofile_name\nThe type of the None singleton.\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\ncalculate_crest_level\nCalculate the crest level for a given overtopping discharge\n\n\ncalculate_overtopping\nCalculate the overtopping discharge\n\n\ncalculate_runup\nCalculate the runup height\n\n\ndraw_profile\nDraw a cross-section of the profile\n\n\nfrom_dictionary\nCreate a profile from a dictionary\n\n\nfrom_gebugekb_tool\nImport a profile from the GEBUGEKB plugin.\n\n\nfrom_prfl\nImport a profile from a .prfl file\n\n\nhas_foreland\nReturns whether the profile has a foreland or breakwater\n\n\nremove_breakwater\nRemove the breakwater\n\n\nremove_foreland\nRemove the foreland\n\n\nset_breakwater\nChange the breakwater\n\n\nset_dike_crest_level\nChange the crest level\n\n\nset_dike_geometry\nChange the geometry of the outer slope of the dike\n\n\nset_dike_orientation\nChange the dike orientation\n\n\nset_foreland_geometry\nChange the geometry of the foreland\n\n\nto_dict\nExport Profile to dictionary\n\n\nto_prfl\nExport to a prfl file\n\n\ntransform_wave_conditions\nTransform the wave conditions for the schematized foreland\n\n\nvalidate_profile\nFunction to validate the profile.\n\n\n\n\n\nProfile.calculate_crest_level(\n    q_overtopping,\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\nCalculate the crest level for a given overtopping discharge\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nq_overtopping\nfloat\nCritical overtopping discharge\nrequired\n\n\nwater_level\nUnion[float, list]\nList or float with the water level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nList or float with the significant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nList or float with the spectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nList or float with the wave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nUnion[float, list]\nList or float with the crest level\n\n\n\n\n\n\n\nProfile.calculate_overtopping(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\nCalculate the overtopping discharge\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwater_level\nUnion[float, list]\nList or float with the water level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nList or float with the significant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nList or float with the spectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nList or float with the wave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nUnion[float, list]\nList or float with the overtopping discharge\n\n\n\n\n\n\n\nProfile.calculate_runup(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\nCalculate the runup height\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwater_level\nUnion[float, list]\nList or float with the water level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nList or float with the significant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nList or float with the spectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nList or float with the wave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nUnion[float, list]\nList or float with the runup height\n\n\n\n\n\n\n\nProfile.draw_profile()\nDraw a cross-section of the profile\n\n\n\nProfile.from_dictionary(dictionary)\nCreate a profile from a dictionary\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndictionary\ndict\nDictionary with all profile settings\nrequired\n\n\n\n\n\n\n\nProfile.from_gebugekb_tool(sql_path, profile_name='Profile', berm_slope=1 / 100)\nImport a profile from the GEBUGEKB plugin.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsql_path\nstr\nPath to the ‘1.sql’ file\nrequired\n\n\nprofile_name\nstr\nName of the profile (default: ‘Profile’)\n'Profile'\n\n\nberm_slope\nfloat\nIf applicable: slope of the berm (default : 1/100)\n1 / 100\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProfile\nProfile object\n\n\n\n\n\n\n\nProfile.from_prfl(prfl_path, profile_name='Profile')\nImport a profile from a .prfl file\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprfl_path\nstr\nPath to the ‘.prfl’ file\nrequired\n\n\nprofile_name\nstr\nName of the profile (default: ‘Profile’)\n'Profile'\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProfile\nProfile object\n\n\n\n\n\n\n\nProfile.has_foreland()\nReturns whether the profile has a foreland or breakwater\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nTrue if the profile has a foreland or breakwater\n\n\n\n\n\n\n\nProfile.remove_breakwater()\nRemove the breakwater Wrapper for set_breakwater()\n\n\n\nProfile.remove_foreland()\nRemove the foreland Wrapper for set_foreland_geometry()\n\n\n\nProfile.set_breakwater(breakwater_type=None, breakwater_level=0.0)\nChange the breakwater\n\n\n\nProfile.set_dike_crest_level(dike_crest_level)\nChange the crest level\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndike_crest_level\nfloat\nThe crest level of the dike\nrequired\n\n\n\n\n\n\n\nProfile.set_dike_geometry(\n    dike_x_coordinates,\n    dike_y_coordinates,\n    dike_roughness=None,\n)\nChange the geometry of the outer slope of the dike\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndike_x_coordinates\nlist\nA list with the x coordinates of the profile\nrequired\n\n\ndike_y_coordinates\nlist\nA list with the y coordinates of the profile\nrequired\n\n\ndike_roughness\nlist\nA list with the roughness of the profile (default : all parts 1.0)\nNone\n\n\n\n\n\n\n\nProfile.set_dike_orientation(dike_orientation)\nChange the dike orientation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndike_orientation\nfloat\nThe dike orientation\nrequired\n\n\n\n\n\n\n\nProfile.set_foreland_geometry(\n    foreland_x_coordinates=None,\n    foreland_y_coordinates=None,\n)\nChange the geometry of the foreland Setting the foreland x and y coordinates to None will remove the foreland.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nforeland_x_coordinates\nlist\nA list with the x coordinates of the foreland (default: None)\nNone\n\n\nforeland_y_coordinates\nlist\nA list with the y coordinates of the foreland (default: None)\nNone\n\n\n\n\n\n\n\nProfile.to_dict()\nExport Profile to dictionary\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ndictionary\nDictionary with all profile settings\n\n\n\n\n\n\n\nProfile.to_prfl(export_path, id='Onbekend000', memo='')\nExport to a prfl file\nexport_path : str Path to where the profile has to be exported id : str Id used in RisKeer memo : str Memo to be added to the prfl file\n\n\n\nProfile.transform_wave_conditions(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    force_array=False,\n)\nTransform the wave conditions for the schematized foreland\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwater_level\nUnion[float, list]\nWater level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nSignificant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nSpectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nWave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\nforce_array\nbool\nAlways force to return an array\nFalse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nTuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]\nWater level and transformed wave conditions (h, hs, tp, dir)\n\n\n\n\n\n\n\nProfile.validate_profile()\nFunction to validate the profile.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nTrue if the profile is OK"
  },
  {
    "objectID": "reference/Profile.html#attributes",
    "href": "reference/Profile.html#attributes",
    "title": "Profile",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nbreakwater_level\nConvert a string or number to a floating-point number, if possible.\n\n\nbreakwater_type\nBreakwater classes for profiles.\n\n\ndike_crest_level\nThe type of the None singleton.\n\n\ndike_orientation\nThe type of the None singleton.\n\n\ndike_roughness\nThe type of the None singleton.\n\n\ndike_x_coordinates\nThe type of the None singleton.\n\n\ndike_y_coordinates\nThe type of the None singleton.\n\n\nforeland_x_coordinates\nThe type of the None singleton.\n\n\nforeland_y_coordinates\nThe type of the None singleton.\n\n\nprofile_name\nThe type of the None singleton."
  },
  {
    "objectID": "reference/Profile.html#methods",
    "href": "reference/Profile.html#methods",
    "title": "Profile",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncalculate_crest_level\nCalculate the crest level for a given overtopping discharge\n\n\ncalculate_overtopping\nCalculate the overtopping discharge\n\n\ncalculate_runup\nCalculate the runup height\n\n\ndraw_profile\nDraw a cross-section of the profile\n\n\nfrom_dictionary\nCreate a profile from a dictionary\n\n\nfrom_gebugekb_tool\nImport a profile from the GEBUGEKB plugin.\n\n\nfrom_prfl\nImport a profile from a .prfl file\n\n\nhas_foreland\nReturns whether the profile has a foreland or breakwater\n\n\nremove_breakwater\nRemove the breakwater\n\n\nremove_foreland\nRemove the foreland\n\n\nset_breakwater\nChange the breakwater\n\n\nset_dike_crest_level\nChange the crest level\n\n\nset_dike_geometry\nChange the geometry of the outer slope of the dike\n\n\nset_dike_orientation\nChange the dike orientation\n\n\nset_foreland_geometry\nChange the geometry of the foreland\n\n\nto_dict\nExport Profile to dictionary\n\n\nto_prfl\nExport to a prfl file\n\n\ntransform_wave_conditions\nTransform the wave conditions for the schematized foreland\n\n\nvalidate_profile\nFunction to validate the profile.\n\n\n\n\n\nProfile.calculate_crest_level(\n    q_overtopping,\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\nCalculate the crest level for a given overtopping discharge\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nq_overtopping\nfloat\nCritical overtopping discharge\nrequired\n\n\nwater_level\nUnion[float, list]\nList or float with the water level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nList or float with the significant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nList or float with the spectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nList or float with the wave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nUnion[float, list]\nList or float with the crest level\n\n\n\n\n\n\n\nProfile.calculate_overtopping(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\nCalculate the overtopping discharge\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwater_level\nUnion[float, list]\nList or float with the water level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nList or float with the significant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nList or float with the spectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nList or float with the wave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nUnion[float, list]\nList or float with the overtopping discharge\n\n\n\n\n\n\n\nProfile.calculate_runup(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    dll_settings=None,\n)\nCalculate the runup height\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwater_level\nUnion[float, list]\nList or float with the water level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nList or float with the significant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nList or float with the spectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nList or float with the wave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nUnion[float, list]\nList or float with the runup height\n\n\n\n\n\n\n\nProfile.draw_profile()\nDraw a cross-section of the profile\n\n\n\nProfile.from_dictionary(dictionary)\nCreate a profile from a dictionary\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndictionary\ndict\nDictionary with all profile settings\nrequired\n\n\n\n\n\n\n\nProfile.from_gebugekb_tool(sql_path, profile_name='Profile', berm_slope=1 / 100)\nImport a profile from the GEBUGEKB plugin.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsql_path\nstr\nPath to the ‘1.sql’ file\nrequired\n\n\nprofile_name\nstr\nName of the profile (default: ‘Profile’)\n'Profile'\n\n\nberm_slope\nfloat\nIf applicable: slope of the berm (default : 1/100)\n1 / 100\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProfile\nProfile object\n\n\n\n\n\n\n\nProfile.from_prfl(prfl_path, profile_name='Profile')\nImport a profile from a .prfl file\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprfl_path\nstr\nPath to the ‘.prfl’ file\nrequired\n\n\nprofile_name\nstr\nName of the profile (default: ‘Profile’)\n'Profile'\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProfile\nProfile object\n\n\n\n\n\n\n\nProfile.has_foreland()\nReturns whether the profile has a foreland or breakwater\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nTrue if the profile has a foreland or breakwater\n\n\n\n\n\n\n\nProfile.remove_breakwater()\nRemove the breakwater Wrapper for set_breakwater()\n\n\n\nProfile.remove_foreland()\nRemove the foreland Wrapper for set_foreland_geometry()\n\n\n\nProfile.set_breakwater(breakwater_type=None, breakwater_level=0.0)\nChange the breakwater\n\n\n\nProfile.set_dike_crest_level(dike_crest_level)\nChange the crest level\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndike_crest_level\nfloat\nThe crest level of the dike\nrequired\n\n\n\n\n\n\n\nProfile.set_dike_geometry(\n    dike_x_coordinates,\n    dike_y_coordinates,\n    dike_roughness=None,\n)\nChange the geometry of the outer slope of the dike\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndike_x_coordinates\nlist\nA list with the x coordinates of the profile\nrequired\n\n\ndike_y_coordinates\nlist\nA list with the y coordinates of the profile\nrequired\n\n\ndike_roughness\nlist\nA list with the roughness of the profile (default : all parts 1.0)\nNone\n\n\n\n\n\n\n\nProfile.set_dike_orientation(dike_orientation)\nChange the dike orientation\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndike_orientation\nfloat\nThe dike orientation\nrequired\n\n\n\n\n\n\n\nProfile.set_foreland_geometry(\n    foreland_x_coordinates=None,\n    foreland_y_coordinates=None,\n)\nChange the geometry of the foreland Setting the foreland x and y coordinates to None will remove the foreland.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nforeland_x_coordinates\nlist\nA list with the x coordinates of the foreland (default: None)\nNone\n\n\nforeland_y_coordinates\nlist\nA list with the y coordinates of the foreland (default: None)\nNone\n\n\n\n\n\n\n\nProfile.to_dict()\nExport Profile to dictionary\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ndictionary\nDictionary with all profile settings\n\n\n\n\n\n\n\nProfile.to_prfl(export_path, id='Onbekend000', memo='')\nExport to a prfl file\nexport_path : str Path to where the profile has to be exported id : str Id used in RisKeer memo : str Memo to be added to the prfl file\n\n\n\nProfile.transform_wave_conditions(\n    water_level,\n    significant_wave_height,\n    spectral_wave_period,\n    wave_direction,\n    tp_tspec=1.1,\n    force_array=False,\n)\nTransform the wave conditions for the schematized foreland\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwater_level\nUnion[float, list]\nWater level\nrequired\n\n\nsignificant_wave_height\nUnion[float, list]\nSignificant wave height\nrequired\n\n\nspectral_wave_period\nUnion[float, list]\nSpectral wave period\nrequired\n\n\nwave_direction\nUnion[float, list]\nWave direction\nrequired\n\n\ntp_tspec\nfloat\nRatio between Tp and Tspec, only used for dam and foreland (default : 1.1)\n1.1\n\n\nforce_array\nbool\nAlways force to return an array\nFalse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nTuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]\nWater level and transformed wave conditions (h, hs, tp, dir)\n\n\n\n\n\n\n\nProfile.validate_profile()\nFunction to validate the profile.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nbool\nTrue if the profile is OK"
  }
]